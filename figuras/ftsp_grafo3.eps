%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 292 168
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, March 7, 2016 8:51:55 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
292 168 setpagesize
0 0 0 0 setmargins
0 0 setorigin
292 168 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
292.000 0.00000 l
292.000 168.000 l
0.00000 168.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
292.000 0.00000 l
292.000 168.000 l
0.00000 168.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 292 168 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -329.000 -684.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
329.000 684.000 m
621.000 684.000 l
621.000 852.000 l
329.000 852.000 l
329.000 684.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -329.000 -684.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -329.000 -684.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -329.000 -684.000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
358.479 717.329 m
362.620 717.329 l
362.620 718.329 l
357.058 718.329 l
357.058 717.329 l
357.506 716.871 358.118 716.248 358.894 715.462  c
359.670 714.676 360.157 714.168 360.354 713.939  c
360.740 713.522 361.008 713.165 361.159 712.868  c
361.310 712.571 361.386 712.282 361.386 712.001  c
361.386 711.532 361.222 711.152 360.894 710.860  c
360.565 710.569 360.141 710.423 359.620 710.423  c
359.245 710.423 358.852 710.485 358.440 710.610  c
358.029 710.735 357.589 710.933 357.120 711.204  c
357.120 710.001 l
357.599 709.814 358.045 709.670 358.456 709.571  c
358.868 709.472 359.245 709.423 359.589 709.423  c
360.495 709.423 361.219 709.649 361.761 710.103  c
362.302 710.556 362.573 711.162 362.573 711.923  c
362.573 712.277 362.506 712.616 362.370 712.939  c
362.235 713.261 361.990 713.642 361.636 714.079  c
361.532 714.194 361.219 714.522 360.698 715.064  c
360.177 715.605 359.438 716.360 358.479 717.329  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
377.707 710.345 m
377.332 710.334 377.124 710.142 377.082 709.767  c
377.082 709.662 377.111 709.561 377.168 709.462  c
377.225 709.363 377.306 709.285 377.410 709.228  c
377.514 709.170 377.624 709.142 377.738 709.142  c
377.842 709.142 377.949 709.170 378.058 709.228  c
378.168 709.285 378.249 709.363 378.301 709.462  c
378.353 709.561 378.379 709.662 378.379 709.767  c
378.368 710.017 378.249 710.189 378.019 710.282  c
379.426 713.235 l
379.113 709.126 l
378.790 709.126 378.592 708.944 378.519 708.579  c
378.519 708.475 378.548 708.373 378.605 708.274  c
378.663 708.176 378.743 708.100 378.848 708.048  c
378.952 707.996 379.066 707.970 379.191 707.970  c
379.295 707.970 379.400 707.996 379.504 708.048  c
379.608 708.100 379.689 708.176 379.746 708.274  c
379.803 708.373 379.832 708.475 379.832 708.579  c
379.821 708.756 379.728 708.912 379.551 709.048  c
380.660 713.423 l
380.910 708.626 l
380.650 708.511 380.514 708.360 380.504 708.173  c
380.504 708.058 380.532 707.952 380.590 707.853  c
380.647 707.754 380.728 707.678 380.832 707.626  c
380.936 707.574 381.040 707.548 381.144 707.548  c
381.259 707.548 381.368 707.574 381.473 707.626  c
381.577 707.678 381.657 707.754 381.715 707.853  c
381.772 707.952 381.801 708.058 381.801 708.173  c
381.790 708.381 381.655 708.532 381.394 708.626  c
381.613 713.439 l
382.707 709.110 l
382.530 708.923 382.441 708.746 382.441 708.579  c
382.441 708.475 382.467 708.373 382.519 708.274  c
382.571 708.176 382.652 708.100 382.762 708.048  c
382.871 707.996 382.978 707.970 383.082 707.970  c
383.196 707.970 383.306 707.996 383.410 708.048  c
383.514 708.100 383.595 708.176 383.652 708.274  c
383.710 708.373 383.738 708.475 383.738 708.579  c
383.696 708.912 383.509 709.110 383.176 709.173  c
382.629 713.235 l
384.144 710.220 l
383.978 710.095 383.894 709.944 383.894 709.767  c
383.894 709.662 383.920 709.561 383.973 709.462  c
384.025 709.363 384.103 709.287 384.207 709.235  c
384.311 709.183 384.420 709.157 384.535 709.157  c
384.650 709.157 384.759 709.183 384.863 709.235  c
384.967 709.287 385.048 709.363 385.105 709.462  c
385.163 709.561 385.191 709.662 385.191 709.767  c
385.139 710.142 384.920 710.329 384.535 710.329  c
383.598 713.032 l
383.598 716.314 l
378.551 716.314 l
378.551 713.032 l
377.707 710.345 l
h
383.254 714.220 m
383.254 713.767 l
379.004 713.767 l
379.004 714.220 l
383.254 714.220 l
h
383.254 715.970 m
383.254 715.517 l
379.004 715.517 l
379.004 715.970 l
383.254 715.970 l
h
388.808 715.314 m
392.949 715.314 l
392.949 716.314 l
387.387 716.314 l
387.387 715.314 l
387.835 714.855 388.446 714.233 389.223 713.446  c
389.999 712.660 390.486 712.152 390.683 711.923  c
391.069 711.506 391.337 711.149 391.488 710.853  c
391.639 710.556 391.715 710.267 391.715 709.985  c
391.715 709.517 391.551 709.136 391.223 708.845  c
390.894 708.553 390.470 708.407 389.949 708.407  c
389.574 708.407 389.181 708.470 388.769 708.595  c
388.358 708.720 387.918 708.918 387.449 709.189  c
387.449 707.985 l
387.928 707.798 388.374 707.655 388.785 707.556  c
389.196 707.457 389.574 707.407 389.918 707.407  c
390.824 707.407 391.548 707.634 392.090 708.087  c
392.631 708.540 392.902 709.147 392.902 709.907  c
392.902 710.261 392.835 710.600 392.699 710.923  c
392.564 711.246 392.319 711.626 391.965 712.064  c
391.861 712.178 391.548 712.506 391.027 713.048  c
390.506 713.590 389.767 714.345 388.808 715.314  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
375.000 714.175 m
375.000 722.459 368.284 729.175 360.000 729.175  c
351.716 729.175 345.000 722.459 345.000 714.175  c
345.000 705.891 351.716 699.175 360.000 699.175  c
368.284 699.175 375.000 705.891 375.000 714.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
493.240 799.579 m
497.880 799.579 l
497.880 800.579 l
494.318 800.579 l
494.318 802.720 l
494.495 802.657 494.669 802.613 494.841 802.587  c
495.013 802.561 495.182 802.548 495.349 802.548  c
496.328 802.548 497.104 802.816 497.677 803.353  c
498.250 803.889 498.536 804.610 498.536 805.517  c
498.536 806.465 498.242 807.199 497.654 807.720  c
497.065 808.241 496.240 808.501 495.177 808.501  c
494.802 808.501 494.424 808.470 494.044 808.407  c
493.664 808.345 493.271 808.251 492.865 808.126  c
492.865 806.939 l
493.219 807.126 493.583 807.267 493.958 807.360  c
494.333 807.454 494.729 807.501 495.146 807.501  c
495.823 807.501 496.359 807.324 496.755 806.970  c
497.151 806.616 497.349 806.131 497.349 805.517  c
497.349 804.912 497.151 804.433 496.755 804.079  c
496.359 803.725 495.823 803.548 495.146 803.548  c
494.833 803.548 494.518 803.582 494.200 803.649  c
493.883 803.717 493.562 803.824 493.240 803.970  c
493.240 799.579 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
488.517 774.376 m
488.142 774.366 487.934 774.173 487.892 773.798  c
487.892 773.694 487.920 773.592 487.978 773.493  c
488.035 773.394 488.116 773.316 488.220 773.259  c
488.324 773.202 488.434 773.173 488.548 773.173  c
488.652 773.173 488.759 773.202 488.868 773.259  c
488.978 773.316 489.059 773.394 489.111 773.493  c
489.163 773.592 489.189 773.694 489.189 773.798  c
489.178 774.048 489.059 774.220 488.829 774.314  c
490.236 777.267 l
489.923 773.157 l
489.600 773.157 489.402 772.975 489.329 772.610  c
489.329 772.506 489.358 772.405 489.415 772.306  c
489.473 772.207 489.553 772.131 489.657 772.079  c
489.762 772.027 489.876 772.001 490.001 772.001  c
490.105 772.001 490.210 772.027 490.314 772.079  c
490.418 772.131 490.499 772.207 490.556 772.306  c
490.613 772.405 490.642 772.506 490.642 772.610  c
490.631 772.787 490.538 772.944 490.361 773.079  c
491.470 777.454 l
491.720 772.657 l
491.460 772.543 491.324 772.392 491.314 772.204  c
491.314 772.090 491.342 771.983 491.400 771.884  c
491.457 771.785 491.538 771.709 491.642 771.657  c
491.746 771.605 491.850 771.579 491.954 771.579  c
492.069 771.579 492.178 771.605 492.282 771.657  c
492.387 771.709 492.467 771.785 492.525 771.884  c
492.582 771.983 492.611 772.090 492.611 772.204  c
492.600 772.412 492.465 772.564 492.204 772.657  c
492.423 777.470 l
493.517 773.142 l
493.340 772.954 493.251 772.777 493.251 772.610  c
493.251 772.506 493.277 772.405 493.329 772.306  c
493.381 772.207 493.462 772.131 493.572 772.079  c
493.681 772.027 493.788 772.001 493.892 772.001  c
494.006 772.001 494.116 772.027 494.220 772.079  c
494.324 772.131 494.405 772.207 494.462 772.306  c
494.519 772.405 494.548 772.506 494.548 772.610  c
494.506 772.944 494.319 773.142 493.986 773.204  c
493.439 777.267 l
494.954 774.251 l
494.788 774.126 494.704 773.975 494.704 773.798  c
494.704 773.694 494.730 773.592 494.782 773.493  c
494.835 773.394 494.913 773.319 495.017 773.267  c
495.121 773.215 495.230 773.189 495.345 773.189  c
495.460 773.189 495.569 773.215 495.673 773.267  c
495.777 773.319 495.858 773.394 495.915 773.493  c
495.973 773.592 496.001 773.694 496.001 773.798  c
495.949 774.173 495.730 774.360 495.345 774.360  c
494.407 777.064 l
494.407 780.345 l
489.361 780.345 l
489.361 777.064 l
488.517 774.376 l
h
494.064 778.251 m
494.064 777.798 l
489.814 777.798 l
489.814 778.251 l
494.064 778.251 l
h
494.064 780.001 m
494.064 779.548 l
489.814 779.548 l
489.814 780.001 l
494.064 780.001 l
h
502.197 775.626 m
502.759 775.751 503.199 776.004 503.517 776.384  c
503.835 776.764 503.993 777.235 503.993 777.798  c
503.993 778.662 503.697 779.332 503.103 779.806  c
502.509 780.280 501.665 780.517 500.572 780.517  c
500.207 780.517 499.829 780.480 499.439 780.407  c
499.048 780.334 498.650 780.225 498.243 780.079  c
498.243 778.939 l
498.566 779.126 498.923 779.269 499.314 779.368  c
499.704 779.467 500.113 779.517 500.540 779.517  c
501.280 779.517 501.845 779.371 502.236 779.079  c
502.626 778.787 502.822 778.360 502.822 777.798  c
502.822 777.287 502.639 776.886 502.275 776.595  c
501.910 776.303 501.410 776.157 500.775 776.157  c
499.743 776.157 l
499.743 775.189 l
500.822 775.189 l
501.394 775.189 501.837 775.071 502.150 774.837  c
502.462 774.603 502.618 774.267 502.618 773.829  c
502.618 773.381 502.460 773.037 502.142 772.798  c
501.824 772.558 501.368 772.439 500.775 772.439  c
500.441 772.439 500.090 772.472 499.720 772.540  c
499.350 772.608 498.941 772.715 498.493 772.860  c
498.493 771.814 l
498.952 771.689 499.376 771.595 499.767 771.532  c
500.157 771.470 500.525 771.439 500.868 771.439  c
501.775 771.439 502.488 771.642 503.009 772.048  c
503.530 772.454 503.790 773.006 503.790 773.704  c
503.790 774.194 503.652 774.605 503.376 774.939  c
503.100 775.272 502.707 775.501 502.197 775.626  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
510.760 804.175 m
510.760 812.459 504.044 819.175 495.760 819.175  c
487.476 819.175 480.760 812.459 480.760 804.175  c
480.760 795.891 487.476 789.175 495.760 789.175  c
504.044 789.175 510.760 795.891 510.760 804.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
390.151 815.260 m
389.620 815.260 389.198 815.443 388.886 815.807  c
388.573 816.172 388.417 816.667 388.417 817.292  c
388.417 817.927 388.573 818.427 388.886 818.792  c
389.198 819.156 389.620 819.338 390.151 819.338  c
390.683 819.338 391.102 819.156 391.409 818.792  c
391.716 818.427 391.870 817.927 391.870 817.292  c
391.870 816.667 391.716 816.172 391.409 815.807  c
391.102 815.443 390.683 815.260 390.151 815.260  c
h
392.495 811.542 m
392.495 812.620 l
392.193 812.484 391.891 812.380 391.589 812.307  c
391.287 812.234 390.990 812.198 390.698 812.198  c
389.917 812.198 389.321 812.461 388.909 812.987  c
388.498 813.513 388.261 814.307 388.198 815.370  c
388.427 815.036 388.716 814.779 389.065 814.596  c
389.414 814.414 389.797 814.323 390.214 814.323  c
391.089 814.323 391.782 814.588 392.292 815.120  c
392.802 815.651 393.058 816.375 393.058 817.292  c
393.058 818.198 392.792 818.922 392.261 819.463  c
391.729 820.005 391.026 820.276 390.151 820.276  c
389.131 820.276 388.354 819.888 387.823 819.112  c
387.292 818.336 387.026 817.213 387.026 815.745  c
387.026 814.359 387.354 813.255 388.011 812.432  c
388.667 811.609 389.547 811.198 390.651 811.198  c
390.943 811.198 391.240 811.226 391.542 811.284  c
391.844 811.341 392.162 811.427 392.495 811.542  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
382.757 786.151 m
382.382 786.141 382.174 785.948 382.132 785.573  c
382.132 785.469 382.160 785.367 382.218 785.268  c
382.275 785.169 382.356 785.091 382.460 785.034  c
382.564 784.976 382.674 784.948 382.788 784.948  c
382.892 784.948 382.999 784.976 383.108 785.034  c
383.218 785.091 383.299 785.169 383.351 785.268  c
383.403 785.367 383.429 785.469 383.429 785.573  c
383.418 785.823 383.299 785.995 383.069 786.088  c
384.476 789.042 l
384.163 784.932 l
383.840 784.932 383.642 784.750 383.569 784.385  c
383.569 784.281 383.598 784.180 383.655 784.081  c
383.713 783.982 383.793 783.906 383.897 783.854  c
384.002 783.802 384.116 783.776 384.241 783.776  c
384.345 783.776 384.450 783.802 384.554 783.854  c
384.658 783.906 384.739 783.982 384.796 784.081  c
384.853 784.180 384.882 784.281 384.882 784.385  c
384.871 784.562 384.778 784.719 384.601 784.854  c
385.710 789.229 l
385.960 784.432 l
385.700 784.318 385.564 784.167 385.554 783.979  c
385.554 783.864 385.582 783.758 385.640 783.659  c
385.697 783.560 385.778 783.484 385.882 783.432  c
385.986 783.380 386.090 783.354 386.194 783.354  c
386.309 783.354 386.418 783.380 386.522 783.432  c
386.627 783.484 386.707 783.560 386.765 783.659  c
386.822 783.758 386.851 783.864 386.851 783.979  c
386.840 784.187 386.705 784.338 386.444 784.432  c
386.663 789.245 l
387.757 784.917 l
387.580 784.729 387.491 784.552 387.491 784.385  c
387.491 784.281 387.517 784.180 387.569 784.081  c
387.621 783.982 387.702 783.906 387.812 783.854  c
387.921 783.802 388.028 783.776 388.132 783.776  c
388.246 783.776 388.356 783.802 388.460 783.854  c
388.564 783.906 388.645 783.982 388.702 784.081  c
388.759 784.180 388.788 784.281 388.788 784.385  c
388.746 784.719 388.559 784.917 388.226 784.979  c
387.679 789.042 l
389.194 786.026 l
389.028 785.901 388.944 785.750 388.944 785.573  c
388.944 785.469 388.970 785.367 389.022 785.268  c
389.075 785.169 389.153 785.094 389.257 785.042  c
389.361 784.989 389.470 784.963 389.585 784.963  c
389.700 784.963 389.809 784.989 389.913 785.042  c
390.017 785.094 390.098 785.169 390.155 785.268  c
390.213 785.367 390.241 785.469 390.241 785.573  c
390.189 785.948 389.970 786.135 389.585 786.135  c
388.647 788.838 l
388.647 792.120 l
383.601 792.120 l
383.601 788.838 l
382.757 786.151 l
h
388.304 790.026 m
388.304 789.573 l
384.054 789.573 l
384.054 790.026 l
388.304 790.026 l
h
388.304 791.776 m
388.304 791.323 l
384.054 791.323 l
384.054 791.776 l
388.304 791.776 l
h
396.437 787.401 m
396.999 787.526 397.439 787.779 397.757 788.159  c
398.075 788.539 398.233 789.010 398.233 789.573  c
398.233 790.437 397.937 791.107 397.343 791.581  c
396.749 792.055 395.905 792.292 394.812 792.292  c
394.447 792.292 394.069 792.255 393.679 792.182  c
393.288 792.109 392.890 792.000 392.483 791.854  c
392.483 790.713 l
392.806 790.901 393.163 791.044 393.554 791.143  c
393.944 791.242 394.353 791.292 394.780 791.292  c
395.520 791.292 396.085 791.146 396.476 790.854  c
396.866 790.562 397.062 790.135 397.062 789.573  c
397.062 789.062 396.879 788.661 396.515 788.370  c
396.150 788.078 395.650 787.932 395.015 787.932  c
393.983 787.932 l
393.983 786.963 l
395.062 786.963 l
395.634 786.963 396.077 786.846 396.390 786.612  c
396.702 786.378 396.858 786.042 396.858 785.604  c
396.858 785.156 396.700 784.812 396.382 784.573  c
396.064 784.333 395.608 784.213 395.015 784.213  c
394.681 784.213 394.330 784.247 393.960 784.315  c
393.590 784.383 393.181 784.489 392.733 784.635  c
392.733 783.588 l
393.192 783.463 393.616 783.370 394.007 783.307  c
394.397 783.245 394.765 783.213 395.108 783.213  c
396.015 783.213 396.728 783.417 397.249 783.823  c
397.770 784.229 398.030 784.781 398.030 785.479  c
398.030 785.969 397.892 786.380 397.616 786.713  c
397.340 787.047 396.947 787.276 396.437 787.401  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
405.000 815.950 m
405.000 824.234 398.284 830.950 390.000 830.950  c
381.716 830.950 375.000 824.234 375.000 815.950  c
375.000 807.665 381.716 800.950 390.000 800.950  c
398.284 800.950 405.000 807.665 405.000 815.950  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
451.058 743.610 m
451.620 743.735 452.060 743.988 452.378 744.368  c
452.696 744.748 452.854 745.220 452.854 745.782  c
452.854 746.647 452.558 747.316 451.964 747.790  c
451.370 748.264 450.526 748.501 449.433 748.501  c
449.068 748.501 448.690 748.465 448.300 748.392  c
447.909 748.319 447.511 748.209 447.104 748.064  c
447.104 746.923 l
447.427 747.110 447.784 747.254 448.175 747.353  c
448.565 747.452 448.974 747.501 449.401 747.501  c
450.141 747.501 450.706 747.355 451.097 747.064  c
451.487 746.772 451.683 746.345 451.683 745.782  c
451.683 745.272 451.500 744.871 451.136 744.579  c
450.771 744.287 450.271 744.142 449.636 744.142  c
448.604 744.142 l
448.604 743.173 l
449.683 743.173 l
450.256 743.173 450.698 743.056 451.011 742.821  c
451.323 742.587 451.479 742.251 451.479 741.814  c
451.479 741.366 451.321 741.022 451.003 740.782  c
450.685 740.543 450.229 740.423 449.636 740.423  c
449.302 740.423 448.951 740.457 448.581 740.524  c
448.211 740.592 447.802 740.699 447.354 740.845  c
447.354 739.798 l
447.813 739.673 448.237 739.579 448.628 739.517  c
449.019 739.454 449.386 739.423 449.729 739.423  c
450.636 739.423 451.349 739.626 451.870 740.032  c
452.391 740.439 452.651 740.991 452.651 741.689  c
452.651 742.178 452.513 742.590 452.237 742.923  c
451.961 743.256 451.568 743.485 451.058 743.610  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
442.757 714.376 m
442.382 714.366 442.174 714.173 442.132 713.798  c
442.132 713.694 442.160 713.592 442.218 713.493  c
442.275 713.394 442.356 713.316 442.460 713.259  c
442.564 713.202 442.674 713.173 442.788 713.173  c
442.892 713.173 442.999 713.202 443.108 713.259  c
443.218 713.316 443.299 713.394 443.351 713.493  c
443.403 713.592 443.429 713.694 443.429 713.798  c
443.418 714.048 443.299 714.220 443.069 714.314  c
444.476 717.267 l
444.163 713.157 l
443.840 713.157 443.642 712.975 443.569 712.610  c
443.569 712.506 443.598 712.405 443.655 712.306  c
443.713 712.207 443.793 712.131 443.897 712.079  c
444.002 712.027 444.116 712.001 444.241 712.001  c
444.345 712.001 444.450 712.027 444.554 712.079  c
444.658 712.131 444.739 712.207 444.796 712.306  c
444.853 712.405 444.882 712.506 444.882 712.610  c
444.871 712.787 444.778 712.944 444.601 713.079  c
445.710 717.454 l
445.960 712.657 l
445.700 712.543 445.564 712.392 445.554 712.204  c
445.554 712.090 445.582 711.983 445.640 711.884  c
445.697 711.785 445.778 711.709 445.882 711.657  c
445.986 711.605 446.090 711.579 446.194 711.579  c
446.309 711.579 446.418 711.605 446.522 711.657  c
446.627 711.709 446.707 711.785 446.765 711.884  c
446.822 711.983 446.851 712.090 446.851 712.204  c
446.840 712.412 446.705 712.564 446.444 712.657  c
446.663 717.470 l
447.757 713.142 l
447.580 712.954 447.491 712.777 447.491 712.610  c
447.491 712.506 447.517 712.405 447.569 712.306  c
447.621 712.207 447.702 712.131 447.812 712.079  c
447.921 712.027 448.028 712.001 448.132 712.001  c
448.246 712.001 448.356 712.027 448.460 712.079  c
448.564 712.131 448.645 712.207 448.702 712.306  c
448.759 712.405 448.788 712.506 448.788 712.610  c
448.746 712.944 448.559 713.142 448.226 713.204  c
447.679 717.267 l
449.194 714.251 l
449.028 714.126 448.944 713.975 448.944 713.798  c
448.944 713.694 448.970 713.592 449.022 713.493  c
449.075 713.394 449.153 713.319 449.257 713.267  c
449.361 713.215 449.470 713.189 449.585 713.189  c
449.700 713.189 449.809 713.215 449.913 713.267  c
450.017 713.319 450.098 713.394 450.155 713.493  c
450.213 713.592 450.241 713.694 450.241 713.798  c
450.189 714.173 449.970 714.360 449.585 714.360  c
448.647 717.064 l
448.647 720.345 l
443.601 720.345 l
443.601 717.064 l
442.757 714.376 l
h
448.304 718.251 m
448.304 717.798 l
444.054 717.798 l
444.054 718.251 l
448.304 718.251 l
h
448.304 720.001 m
448.304 719.548 l
444.054 719.548 l
444.054 720.001 l
448.304 720.001 l
h
453.858 719.345 m
457.999 719.345 l
457.999 720.345 l
452.437 720.345 l
452.437 719.345 l
452.884 718.886 453.496 718.264 454.272 717.478  c
455.049 716.691 455.535 716.183 455.733 715.954  c
456.119 715.537 456.387 715.181 456.538 714.884  c
456.689 714.587 456.765 714.298 456.765 714.017  c
456.765 713.548 456.601 713.168 456.272 712.876  c
455.944 712.584 455.520 712.439 454.999 712.439  c
454.624 712.439 454.231 712.501 453.819 712.626  c
453.408 712.751 452.968 712.949 452.499 713.220  c
452.499 712.017 l
452.978 711.829 453.424 711.686 453.835 711.587  c
454.246 711.488 454.624 711.439 454.968 711.439  c
455.874 711.439 456.598 711.665 457.140 712.118  c
457.681 712.571 457.952 713.178 457.952 713.939  c
457.952 714.293 457.884 714.631 457.749 714.954  c
457.614 715.277 457.369 715.657 457.015 716.095  c
456.910 716.209 456.598 716.537 456.077 717.079  c
455.556 717.621 454.817 718.376 453.858 719.345  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
465.000 744.175 m
465.000 752.459 458.284 759.175 450.000 759.175  c
441.716 759.175 435.000 752.459 435.000 744.175  c
435.000 735.891 441.716 729.175 450.000 729.175  c
458.284 729.175 465.000 735.891 465.000 744.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
579.914 740.610 m
576.930 745.282 l
579.914 745.282 l
579.914 740.610 l
h
579.601 739.579 m
581.101 739.579 l
581.101 745.282 l
582.351 745.282 l
582.351 746.267 l
581.101 746.267 l
581.101 748.329 l
579.914 748.329 l
579.914 746.267 l
575.976 746.267 l
575.976 745.126 l
579.601 739.579 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
544.824 742.360 m
544.449 742.350 544.240 742.157 544.199 741.782  c
544.199 741.678 544.227 741.577 544.285 741.478  c
544.342 741.379 544.423 741.301 544.527 741.243  c
544.631 741.186 544.740 741.157 544.855 741.157  c
544.959 741.157 545.066 741.186 545.175 741.243  c
545.285 741.301 545.365 741.379 545.417 741.478  c
545.470 741.577 545.496 741.678 545.496 741.782  c
545.485 742.032 545.365 742.204 545.136 742.298  c
546.542 745.251 l
546.230 741.142 l
545.907 741.142 545.709 740.959 545.636 740.595  c
545.636 740.491 545.665 740.389 545.722 740.290  c
545.779 740.191 545.860 740.116 545.964 740.064  c
546.069 740.011 546.183 739.985 546.308 739.985  c
546.412 739.985 546.516 740.011 546.621 740.064  c
546.725 740.116 546.806 740.191 546.863 740.290  c
546.920 740.389 546.949 740.491 546.949 740.595  c
546.938 740.772 546.845 740.928 546.667 741.064  c
547.777 745.439 l
548.027 740.642 l
547.766 740.527 547.631 740.376 547.621 740.189  c
547.621 740.074 547.649 739.967 547.707 739.868  c
547.764 739.769 547.845 739.694 547.949 739.642  c
548.053 739.590 548.157 739.564 548.261 739.564  c
548.376 739.564 548.485 739.590 548.589 739.642  c
548.694 739.694 548.774 739.769 548.832 739.868  c
548.889 739.967 548.917 740.074 548.917 740.189  c
548.907 740.397 548.772 740.548 548.511 740.642  c
548.730 745.454 l
549.824 741.126 l
549.647 740.939 549.558 740.761 549.558 740.595  c
549.558 740.491 549.584 740.389 549.636 740.290  c
549.688 740.191 549.769 740.116 549.878 740.064  c
549.988 740.011 550.095 739.985 550.199 739.985  c
550.313 739.985 550.423 740.011 550.527 740.064  c
550.631 740.116 550.712 740.191 550.769 740.290  c
550.826 740.389 550.855 740.491 550.855 740.595  c
550.813 740.928 550.626 741.126 550.292 741.189  c
549.746 745.251 l
551.261 742.235 l
551.095 742.110 551.011 741.959 551.011 741.782  c
551.011 741.678 551.037 741.577 551.089 741.478  c
551.141 741.379 551.220 741.303 551.324 741.251  c
551.428 741.199 551.537 741.173 551.652 741.173  c
551.766 741.173 551.876 741.199 551.980 741.251  c
552.084 741.303 552.165 741.379 552.222 741.478  c
552.279 741.577 552.308 741.678 552.308 741.782  c
552.256 742.157 552.037 742.345 551.652 742.345  c
550.714 745.048 l
550.714 748.329 l
545.667 748.329 l
545.667 745.048 l
544.824 742.360 l
h
550.371 746.235 m
550.371 745.782 l
546.121 745.782 l
546.121 746.235 l
550.371 746.235 l
h
550.371 747.985 m
550.371 747.532 l
546.121 747.532 l
546.121 747.985 l
550.371 747.985 l
h
558.160 740.610 m
555.175 745.282 l
558.160 745.282 l
558.160 740.610 l
h
557.847 739.579 m
559.347 739.579 l
559.347 745.282 l
560.597 745.282 l
560.597 746.267 l
559.347 746.267 l
559.347 748.329 l
558.160 748.329 l
558.160 746.267 l
554.222 746.267 l
554.222 745.126 l
557.847 739.579 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
594.200 744.175 m
594.200 752.459 587.484 759.175 579.200 759.175  c
570.916 759.175 564.200 752.459 564.200 744.175  c
564.200 735.891 570.916 729.175 579.200 729.175  c
587.484 729.175 594.200 735.891 594.200 744.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
576.367 817.179 m
581.992 817.179 l
581.992 817.679 l
578.820 825.929 l
577.586 825.929 l
580.570 818.179 l
576.367 818.179 l
576.367 817.179 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
586.957 796.723 m
586.582 796.713 586.374 796.520 586.332 796.145  c
586.332 796.041 586.360 795.939 586.418 795.840  c
586.475 795.741 586.556 795.663 586.660 795.606  c
586.764 795.548 586.874 795.520 586.988 795.520  c
587.092 795.520 587.199 795.548 587.308 795.606  c
587.418 795.663 587.499 795.741 587.551 795.840  c
587.603 795.939 587.629 796.041 587.629 796.145  c
587.618 796.395 587.499 796.567 587.269 796.660  c
588.676 799.614 l
588.363 795.504 l
588.040 795.504 587.842 795.322 587.769 794.957  c
587.769 794.853 587.798 794.752 587.855 794.653  c
587.913 794.554 587.993 794.478 588.097 794.426  c
588.202 794.374 588.316 794.348 588.441 794.348  c
588.545 794.348 588.650 794.374 588.754 794.426  c
588.858 794.478 588.939 794.554 588.996 794.653  c
589.053 794.752 589.082 794.853 589.082 794.957  c
589.071 795.134 588.978 795.291 588.801 795.426  c
589.910 799.801 l
590.160 795.004 l
589.900 794.890 589.764 794.739 589.754 794.551  c
589.754 794.437 589.782 794.330 589.840 794.231  c
589.897 794.132 589.978 794.056 590.082 794.004  c
590.186 793.952 590.290 793.926 590.394 793.926  c
590.509 793.926 590.618 793.952 590.722 794.004  c
590.827 794.056 590.907 794.132 590.965 794.231  c
591.022 794.330 591.051 794.437 591.051 794.551  c
591.040 794.759 590.905 794.910 590.644 795.004  c
590.863 799.817 l
591.957 795.489 l
591.780 795.301 591.691 795.124 591.691 794.957  c
591.691 794.853 591.717 794.752 591.769 794.653  c
591.821 794.554 591.902 794.478 592.012 794.426  c
592.121 794.374 592.228 794.348 592.332 794.348  c
592.446 794.348 592.556 794.374 592.660 794.426  c
592.764 794.478 592.845 794.554 592.902 794.653  c
592.959 794.752 592.988 794.853 592.988 794.957  c
592.946 795.291 592.759 795.489 592.426 795.551  c
591.879 799.614 l
593.394 796.598 l
593.228 796.473 593.144 796.322 593.144 796.145  c
593.144 796.041 593.170 795.939 593.222 795.840  c
593.275 795.741 593.353 795.666 593.457 795.614  c
593.561 795.562 593.670 795.535 593.785 795.535  c
593.900 795.535 594.009 795.562 594.113 795.614  c
594.217 795.666 594.298 795.741 594.355 795.840  c
594.413 795.939 594.441 796.041 594.441 796.145  c
594.389 796.520 594.170 796.707 593.785 796.707  c
592.847 799.410 l
592.847 802.692 l
587.801 802.692 l
587.801 799.410 l
586.957 796.723 l
h
592.504 800.598 m
592.504 800.145 l
588.254 800.145 l
588.254 800.598 l
592.504 800.598 l
h
592.504 802.348 m
592.504 801.895 l
588.254 801.895 l
588.254 802.348 l
592.504 802.348 l
h
600.293 794.973 m
597.308 799.645 l
600.293 799.645 l
600.293 794.973 l
h
599.980 793.942 m
601.480 793.942 l
601.480 799.645 l
602.730 799.645 l
602.730 800.629 l
601.480 800.629 l
601.480 802.692 l
600.293 802.692 l
600.293 800.629 l
596.355 800.629 l
596.355 799.489 l
599.980 793.942 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
594.200 821.775 m
594.200 830.059 587.484 836.775 579.200 836.775  c
570.916 836.775 564.200 830.059 564.200 821.775  c
564.200 813.491 570.916 806.775 579.200 806.775  c
587.484 806.775 594.200 813.491 594.200 821.775  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
412.859 813.405 m
472.901 806.720 l
S
newpath
404.908 814.290 m
417.387 817.931 l
413.853 813.294 l
416.281 807.993 l
h
f
newpath
480.852 805.835 m
468.373 802.193 l
471.907 806.830 l
469.479 812.132 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
374.230 718.918 m
428.180 736.902 l
S
newpath
435.770 739.431 m
425.967 730.893 l
427.232 736.585 l
422.804 740.380 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
435.249 761.821 m
404.751 798.303 l
S
newpath
440.379 755.683 m
428.847 761.683 l
434.607 762.589 l
436.519 768.097 l
h
f
newpath
399.621 804.441 m
411.153 798.441 l
405.393 797.536 l
403.481 792.028 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
463.948 762.463 m
481.812 785.887 l
S
newpath
459.096 756.102 m
462.398 768.676 l
464.554 763.258 l
470.349 762.612 l
h
f
newpath
486.664 792.248 m
483.362 779.674 l
481.206 785.092 l
475.411 785.738 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
579.200 767.175 m
579.200 798.775 l
S
newpath
579.200 759.175 m
574.200 771.175 l
579.200 768.175 l
584.200 771.175 l
h
f
newpath
579.200 806.775 m
584.200 794.775 l
579.200 797.775 l
574.200 794.775 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
518.265 808.922 m
556.695 817.028 l
S
newpath
510.437 807.271 m
521.147 814.640 l
519.243 809.128 l
523.211 804.855 l
h
f
newpath
564.523 818.679 m
553.813 811.310 l
555.717 816.822 l
551.749 821.095 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
