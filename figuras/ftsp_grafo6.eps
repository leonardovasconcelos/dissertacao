%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 291 168
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, March 7, 2016 8:52:45 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
291 168 setpagesize
0 0 0 0 setmargins
0 0 setorigin
291 168 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
291.000 0.00000 l
291.000 168.000 l
0.00000 168.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
291.000 0.00000 l
291.000 168.000 l
0.00000 168.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 291 168 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -888.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
674.000 888.000 m
965.000 888.000 l
965.000 1056.00 l
674.000 1056.00 l
674.000 888.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -888.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -888.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -888.000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
920.607 1021.23 m
926.232 1021.23 l
926.232 1021.73 l
923.060 1029.98 l
921.826 1029.98 l
924.810 1022.23 l
920.607 1022.23 l
920.607 1021.23 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
931.197 1000.77 m
930.822 1000.76 930.614 1000.57 930.572 1000.20  c
930.572 1000.09 930.600 999.989 930.658 999.890  c
930.715 999.791 930.796 999.713 930.900 999.656  c
931.004 999.599 931.114 999.570 931.228 999.570  c
931.332 999.570 931.439 999.599 931.548 999.656  c
931.658 999.713 931.739 999.791 931.791 999.890  c
931.843 999.989 931.869 1000.09 931.869 1000.20  c
931.858 1000.45 931.739 1000.62 931.509 1000.71  c
932.916 1003.66 l
932.603 999.555 l
932.280 999.555 932.082 999.372 932.009 999.008  c
932.009 998.903 932.038 998.802 932.095 998.703  c
932.153 998.604 932.233 998.528 932.337 998.476  c
932.442 998.424 932.556 998.398 932.681 998.398  c
932.785 998.398 932.890 998.424 932.994 998.476  c
933.098 998.528 933.179 998.604 933.236 998.703  c
933.293 998.802 933.322 998.903 933.322 999.008  c
933.311 999.185 933.218 999.341 933.041 999.476  c
934.150 1003.85 l
934.400 999.055 l
934.140 998.940 934.004 998.789 933.994 998.601  c
933.994 998.487 934.022 998.380 934.080 998.281  c
934.137 998.182 934.218 998.107 934.322 998.055  c
934.426 998.002 934.530 997.976 934.634 997.976  c
934.749 997.976 934.858 998.002 934.962 998.055  c
935.067 998.107 935.147 998.182 935.205 998.281  c
935.262 998.380 935.291 998.487 935.291 998.601  c
935.280 998.810 935.145 998.961 934.884 999.055  c
935.103 1003.87 l
936.197 999.539 l
936.020 999.351 935.931 999.174 935.931 999.008  c
935.931 998.903 935.957 998.802 936.009 998.703  c
936.061 998.604 936.142 998.528 936.252 998.476  c
936.361 998.424 936.468 998.398 936.572 998.398  c
936.686 998.398 936.796 998.424 936.900 998.476  c
937.004 998.528 937.085 998.604 937.142 998.703  c
937.199 998.802 937.228 998.903 937.228 999.008  c
937.186 999.341 936.999 999.539 936.666 999.601  c
936.119 1003.66 l
937.634 1000.65 l
937.468 1000.52 937.384 1000.37 937.384 1000.20  c
937.384 1000.09 937.410 999.989 937.462 999.890  c
937.515 999.791 937.593 999.716 937.697 999.664  c
937.801 999.612 937.910 999.586 938.025 999.586  c
938.140 999.586 938.249 999.612 938.353 999.664  c
938.457 999.716 938.538 999.791 938.595 999.890  c
938.653 999.989 938.681 1000.09 938.681 1000.20  c
938.629 1000.57 938.410 1000.76 938.025 1000.76  c
937.087 1003.46 l
937.087 1006.74 l
932.041 1006.74 l
932.041 1003.46 l
931.197 1000.77 l
h
936.744 1004.65 m
936.744 1004.20 l
932.494 1004.20 l
932.494 1004.65 l
936.744 1004.65 l
h
936.744 1006.40 m
936.744 1005.95 l
932.494 1005.95 l
932.494 1006.40 l
936.744 1006.40 l
h
942.298 1005.74 m
946.439 1005.74 l
946.439 1006.74 l
940.877 1006.74 l
940.877 1005.74 l
941.324 1005.28 941.936 1004.66 942.712 1003.87  c
943.489 1003.09 943.975 1002.58 944.173 1002.35  c
944.559 1001.93 944.827 1001.58 944.978 1001.28  c
945.129 1000.98 945.205 1000.70 945.205 1000.41  c
945.205 999.945 945.041 999.565 944.712 999.273  c
944.384 998.982 943.960 998.836 943.439 998.836  c
943.064 998.836 942.671 998.898 942.259 999.023  c
941.848 999.148 941.408 999.346 940.939 999.617  c
940.939 998.414 l
941.418 998.226 941.864 998.083 942.275 997.984  c
942.686 997.885 943.064 997.836 943.408 997.836  c
944.314 997.836 945.038 998.062 945.580 998.515  c
946.121 998.969 946.392 999.575 946.392 1000.34  c
946.392 1000.69 946.324 1001.03 946.189 1001.35  c
946.054 1001.67 945.809 1002.05 945.455 1002.49  c
945.350 1002.61 945.038 1002.93 944.517 1003.48  c
943.996 1004.02 943.257 1004.77 942.298 1005.74  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
938.440 1025.83 m
938.440 1034.11 931.724 1040.83 923.440 1040.83  c
915.156 1040.83 908.440 1034.11 908.440 1025.83  c
908.440 1017.54 915.156 1010.83 923.440 1010.83  c
931.724 1010.83 938.440 1017.54 938.440 1025.83  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
924.154 944.661 m
921.169 949.333 l
924.154 949.333 l
924.154 944.661 l
h
923.841 943.629 m
925.341 943.629 l
925.341 949.333 l
926.591 949.333 l
926.591 950.317 l
925.341 950.317 l
925.341 952.379 l
924.154 952.379 l
924.154 950.317 l
920.216 950.317 l
920.216 949.176 l
923.841 943.629 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
889.064 946.411 m
888.689 946.400 888.480 946.208 888.439 945.833  c
888.439 945.728 888.467 945.627 888.525 945.528  c
888.582 945.429 888.663 945.351 888.767 945.293  c
888.871 945.236 888.980 945.208 889.095 945.208  c
889.199 945.208 889.306 945.236 889.415 945.293  c
889.525 945.351 889.605 945.429 889.657 945.528  c
889.710 945.627 889.736 945.728 889.736 945.833  c
889.725 946.083 889.605 946.254 889.376 946.348  c
890.782 949.301 l
890.470 945.192 l
890.147 945.192 889.949 945.010 889.876 944.645  c
889.876 944.541 889.905 944.439 889.962 944.340  c
890.019 944.241 890.100 944.166 890.204 944.114  c
890.309 944.062 890.423 944.036 890.548 944.036  c
890.652 944.036 890.756 944.062 890.861 944.114  c
890.965 944.166 891.045 944.241 891.103 944.340  c
891.160 944.439 891.189 944.541 891.189 944.645  c
891.178 944.822 891.085 944.978 890.907 945.114  c
892.017 949.489 l
892.267 944.692 l
892.006 944.577 891.871 944.426 891.861 944.239  c
891.861 944.124 891.889 944.017 891.947 943.918  c
892.004 943.819 892.085 943.744 892.189 943.692  c
892.293 943.640 892.397 943.614 892.501 943.614  c
892.616 943.614 892.725 943.640 892.829 943.692  c
892.934 943.744 893.014 943.819 893.072 943.918  c
893.129 944.017 893.157 944.124 893.157 944.239  c
893.147 944.447 893.012 944.598 892.751 944.692  c
892.970 949.504 l
894.064 945.176 l
893.887 944.989 893.798 944.812 893.798 944.645  c
893.798 944.541 893.824 944.439 893.876 944.340  c
893.928 944.241 894.009 944.166 894.118 944.114  c
894.228 944.062 894.335 944.036 894.439 944.036  c
894.553 944.036 894.663 944.062 894.767 944.114  c
894.871 944.166 894.952 944.241 895.009 944.340  c
895.066 944.439 895.095 944.541 895.095 944.645  c
895.053 944.978 894.866 945.176 894.532 945.239  c
893.986 949.301 l
895.501 946.286 l
895.335 946.161 895.251 946.010 895.251 945.833  c
895.251 945.728 895.277 945.627 895.329 945.528  c
895.381 945.429 895.460 945.353 895.564 945.301  c
895.668 945.249 895.777 945.223 895.892 945.223  c
896.006 945.223 896.116 945.249 896.220 945.301  c
896.324 945.353 896.405 945.429 896.462 945.528  c
896.519 945.627 896.548 945.728 896.548 945.833  c
896.496 946.208 896.277 946.395 895.892 946.395  c
894.954 949.098 l
894.954 952.379 l
889.907 952.379 l
889.907 949.098 l
889.064 946.411 l
h
894.611 950.286 m
894.611 949.833 l
890.361 949.833 l
890.361 950.286 l
894.611 950.286 l
h
894.611 952.036 m
894.611 951.583 l
890.361 951.583 l
890.361 952.036 l
894.611 952.036 l
h
900.165 951.379 m
904.306 951.379 l
904.306 952.379 l
898.743 952.379 l
898.743 951.379 l
899.191 950.921 899.803 950.299 900.579 949.512  c
901.355 948.726 901.842 948.218 902.040 947.989  c
902.426 947.572 902.694 947.215 902.845 946.918  c
902.996 946.622 903.072 946.333 903.072 946.051  c
903.072 945.583 902.907 945.202 902.579 944.911  c
902.251 944.619 901.827 944.473 901.306 944.473  c
900.931 944.473 900.538 944.536 900.126 944.661  c
899.715 944.786 899.275 944.984 898.806 945.254  c
898.806 944.051 l
899.285 943.864 899.730 943.721 900.142 943.622  c
900.553 943.523 900.931 943.473 901.275 943.473  c
902.181 943.473 902.905 943.700 903.447 944.153  c
903.988 944.606 904.259 945.213 904.259 945.973  c
904.259 946.327 904.191 946.666 904.056 946.989  c
903.920 947.312 903.676 947.692 903.322 948.129  c
903.217 948.244 902.905 948.572 902.384 949.114  c
901.863 949.655 901.124 950.411 900.165 951.379  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
938.440 948.225 m
938.440 956.509 931.724 963.225 923.440 963.225  c
915.156 963.225 908.440 956.509 908.440 948.225  c
908.440 939.941 915.156 933.225 923.440 933.225  c
931.724 933.225 938.440 939.941 938.440 948.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
795.298 947.661 m
795.860 947.786 796.300 948.038 796.618 948.418  c
796.936 948.799 797.094 949.270 797.094 949.833  c
797.094 950.697 796.798 951.366 796.204 951.840  c
795.610 952.314 794.766 952.551 793.673 952.551  c
793.308 952.551 792.930 952.515 792.540 952.442  c
792.149 952.369 791.751 952.260 791.344 952.114  c
791.344 950.973 l
791.667 951.161 792.024 951.304 792.415 951.403  c
792.805 951.502 793.214 951.551 793.641 951.551  c
794.381 951.551 794.946 951.405 795.337 951.114  c
795.727 950.822 795.923 950.395 795.923 949.833  c
795.923 949.322 795.740 948.921 795.376 948.629  c
795.011 948.338 794.511 948.192 793.876 948.192  c
792.844 948.192 l
792.844 947.223 l
793.923 947.223 l
794.496 947.223 794.938 947.106 795.251 946.872  c
795.563 946.637 795.719 946.301 795.719 945.864  c
795.719 945.416 795.561 945.072 795.243 944.833  c
794.925 944.593 794.469 944.473 793.876 944.473  c
793.542 944.473 793.191 944.507 792.821 944.575  c
792.451 944.642 792.042 944.749 791.594 944.895  c
791.594 943.848 l
792.053 943.723 792.477 943.629 792.868 943.567  c
793.259 943.504 793.626 943.473 793.969 943.473  c
794.876 943.473 795.589 943.676 796.110 944.083  c
796.631 944.489 796.891 945.041 796.891 945.739  c
796.891 946.228 796.753 946.640 796.477 946.973  c
796.201 947.306 795.808 947.536 795.298 947.661  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
786.997 918.426 m
786.622 918.416 786.413 918.223 786.372 917.848  c
786.372 917.744 786.400 917.642 786.458 917.543  c
786.515 917.444 786.596 917.366 786.700 917.309  c
786.804 917.252 786.913 917.223 787.028 917.223  c
787.132 917.223 787.239 917.252 787.348 917.309  c
787.458 917.366 787.538 917.444 787.591 917.543  c
787.643 917.642 787.669 917.744 787.669 917.848  c
787.658 918.098 787.538 918.270 787.309 918.364  c
788.716 921.317 l
788.403 917.208 l
788.080 917.208 787.882 917.025 787.809 916.661  c
787.809 916.556 787.838 916.455 787.895 916.356  c
787.953 916.257 788.033 916.181 788.137 916.129  c
788.242 916.077 788.356 916.051 788.481 916.051  c
788.585 916.051 788.690 916.077 788.794 916.129  c
788.898 916.181 788.979 916.257 789.036 916.356  c
789.093 916.455 789.122 916.556 789.122 916.661  c
789.111 916.838 789.018 916.994 788.841 917.129  c
789.950 921.504 l
790.200 916.708 l
789.940 916.593 789.804 916.442 789.794 916.254  c
789.794 916.140 789.822 916.033 789.880 915.934  c
789.937 915.835 790.018 915.760 790.122 915.708  c
790.226 915.655 790.330 915.629 790.434 915.629  c
790.549 915.629 790.658 915.655 790.762 915.708  c
790.867 915.760 790.947 915.835 791.005 915.934  c
791.062 916.033 791.091 916.140 791.091 916.254  c
791.080 916.463 790.945 916.614 790.684 916.708  c
790.903 921.520 l
791.997 917.192 l
791.820 917.004 791.731 916.827 791.731 916.661  c
791.731 916.556 791.757 916.455 791.809 916.356  c
791.861 916.257 791.942 916.181 792.052 916.129  c
792.161 916.077 792.268 916.051 792.372 916.051  c
792.486 916.051 792.596 916.077 792.700 916.129  c
792.804 916.181 792.885 916.257 792.942 916.356  c
792.999 916.455 793.028 916.556 793.028 916.661  c
792.986 916.994 792.799 917.192 792.466 917.254  c
791.919 921.317 l
793.434 918.301 l
793.268 918.176 793.184 918.025 793.184 917.848  c
793.184 917.744 793.210 917.642 793.262 917.543  c
793.315 917.444 793.393 917.369 793.497 917.317  c
793.601 917.265 793.710 917.239 793.825 917.239  c
793.940 917.239 794.049 917.265 794.153 917.317  c
794.257 917.369 794.338 917.444 794.395 917.543  c
794.453 917.642 794.481 917.744 794.481 917.848  c
794.429 918.223 794.210 918.411 793.825 918.411  c
792.887 921.114 l
792.887 924.395 l
787.841 924.395 l
787.841 921.114 l
786.997 918.426 l
h
792.544 922.301 m
792.544 921.848 l
788.294 921.848 l
788.294 922.301 l
792.544 922.301 l
h
792.544 924.051 m
792.544 923.598 l
788.294 923.598 l
788.294 924.051 l
792.544 924.051 l
h
798.098 923.395 m
802.239 923.395 l
802.239 924.395 l
796.677 924.395 l
796.677 923.395 l
797.124 922.937 797.736 922.314 798.512 921.528  c
799.288 920.741 799.775 920.234 799.973 920.004  c
800.359 919.588 800.627 919.231 800.778 918.934  c
800.929 918.637 801.005 918.348 801.005 918.067  c
801.005 917.598 800.841 917.218 800.512 916.926  c
800.184 916.635 799.760 916.489 799.239 916.489  c
798.864 916.489 798.471 916.551 798.059 916.676  c
797.648 916.801 797.208 916.999 796.739 917.270  c
796.739 916.067 l
797.218 915.879 797.663 915.736 798.075 915.637  c
798.486 915.538 798.864 915.489 799.208 915.489  c
800.114 915.489 800.838 915.715 801.380 916.168  c
801.921 916.622 802.192 917.228 802.192 917.989  c
802.192 918.343 802.124 918.681 801.989 919.004  c
801.854 919.327 801.609 919.708 801.255 920.145  c
801.150 920.260 800.838 920.588 800.317 921.129  c
799.796 921.671 799.057 922.426 798.098 923.395  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
809.240 948.225 m
809.240 956.509 802.524 963.225 794.240 963.225  c
785.956 963.225 779.240 956.509 779.240 948.225  c
779.240 939.941 785.956 933.225 794.240 933.225  c
802.524 933.225 809.240 939.941 809.240 948.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
734.391 1019.31 m
733.860 1019.31 733.438 1019.49 733.126 1019.86  c
732.813 1020.22 732.657 1020.72 732.657 1021.34  c
732.657 1021.98 732.813 1022.48 733.126 1022.84  c
733.438 1023.21 733.860 1023.39 734.391 1023.39  c
734.923 1023.39 735.342 1023.21 735.649 1022.84  c
735.956 1022.48 736.110 1021.98 736.110 1021.34  c
736.110 1020.72 735.956 1020.22 735.649 1019.86  c
735.342 1019.49 734.923 1019.31 734.391 1019.31  c
h
736.735 1015.59 m
736.735 1016.67 l
736.433 1016.53 736.131 1016.43 735.829 1016.36  c
735.527 1016.28 735.230 1016.25 734.938 1016.25  c
734.157 1016.25 733.561 1016.51 733.149 1017.04  c
732.738 1017.56 732.501 1018.36 732.438 1019.42  c
732.667 1019.09 732.956 1018.83 733.305 1018.65  c
733.654 1018.46 734.037 1018.37 734.454 1018.37  c
735.329 1018.37 736.022 1018.64 736.532 1019.17  c
737.042 1019.70 737.298 1020.43 737.298 1021.34  c
737.298 1022.25 737.032 1022.97 736.501 1023.51  c
735.969 1024.06 735.266 1024.33 734.391 1024.33  c
733.371 1024.33 732.594 1023.94 732.063 1023.16  c
731.532 1022.39 731.266 1021.26 731.266 1019.79  c
731.266 1018.41 731.594 1017.31 732.251 1016.48  c
732.907 1015.66 733.787 1015.25 734.891 1015.25  c
735.183 1015.25 735.480 1015.28 735.782 1015.33  c
736.084 1015.39 736.402 1015.48 736.735 1015.59  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
726.997 990.201 m
726.622 990.191 726.413 989.998 726.372 989.623  c
726.372 989.519 726.400 989.417 726.458 989.318  c
726.515 989.219 726.596 989.141 726.700 989.084  c
726.804 989.027 726.913 988.998 727.028 988.998  c
727.132 988.998 727.239 989.027 727.348 989.084  c
727.458 989.141 727.538 989.219 727.591 989.318  c
727.643 989.417 727.669 989.519 727.669 989.623  c
727.658 989.873 727.538 990.045 727.309 990.139  c
728.716 993.092 l
728.403 988.982 l
728.080 988.982 727.882 988.800 727.809 988.436  c
727.809 988.331 727.838 988.230 727.895 988.131  c
727.953 988.032 728.033 987.956 728.137 987.904  c
728.242 987.852 728.356 987.826 728.481 987.826  c
728.585 987.826 728.690 987.852 728.794 987.904  c
728.898 987.956 728.979 988.032 729.036 988.131  c
729.093 988.230 729.122 988.331 729.122 988.436  c
729.111 988.613 729.018 988.769 728.841 988.904  c
729.950 993.279 l
730.200 988.482 l
729.940 988.368 729.804 988.217 729.794 988.029  c
729.794 987.915 729.822 987.808 729.880 987.709  c
729.937 987.610 730.018 987.535 730.122 987.482  c
730.226 987.430 730.330 987.404 730.434 987.404  c
730.549 987.404 730.658 987.430 730.762 987.482  c
730.867 987.535 730.947 987.610 731.005 987.709  c
731.062 987.808 731.091 987.915 731.091 988.029  c
731.080 988.238 730.945 988.389 730.684 988.482  c
730.903 993.295 l
731.997 988.967 l
731.820 988.779 731.731 988.602 731.731 988.436  c
731.731 988.331 731.757 988.230 731.809 988.131  c
731.861 988.032 731.942 987.956 732.052 987.904  c
732.161 987.852 732.268 987.826 732.372 987.826  c
732.486 987.826 732.596 987.852 732.700 987.904  c
732.804 987.956 732.885 988.032 732.942 988.131  c
732.999 988.230 733.028 988.331 733.028 988.436  c
732.986 988.769 732.799 988.967 732.466 989.029  c
731.919 993.092 l
733.434 990.076 l
733.268 989.951 733.184 989.800 733.184 989.623  c
733.184 989.519 733.210 989.417 733.262 989.318  c
733.315 989.219 733.393 989.144 733.497 989.092  c
733.601 989.040 733.710 989.014 733.825 989.014  c
733.940 989.014 734.049 989.040 734.153 989.092  c
734.257 989.144 734.338 989.219 734.395 989.318  c
734.453 989.417 734.481 989.519 734.481 989.623  c
734.429 989.998 734.210 990.186 733.825 990.186  c
732.887 992.889 l
732.887 996.170 l
727.841 996.170 l
727.841 992.889 l
726.997 990.201 l
h
732.544 994.076 m
732.544 993.623 l
728.294 993.623 l
728.294 994.076 l
732.544 994.076 l
h
732.544 995.826 m
732.544 995.373 l
728.294 995.373 l
728.294 995.826 l
732.544 995.826 l
h
738.098 995.170 m
742.239 995.170 l
742.239 996.170 l
736.677 996.170 l
736.677 995.170 l
737.124 994.712 737.736 994.089 738.512 993.303  c
739.288 992.516 739.775 992.008 739.973 991.779  c
740.359 991.363 740.627 991.006 740.778 990.709  c
740.929 990.412 741.005 990.123 741.005 989.842  c
741.005 989.373 740.841 988.993 740.512 988.701  c
740.184 988.410 739.760 988.264 739.239 988.264  c
738.864 988.264 738.471 988.326 738.059 988.451  c
737.648 988.576 737.208 988.774 736.739 989.045  c
736.739 987.842 l
737.218 987.654 737.663 987.511 738.075 987.412  c
738.486 987.313 738.864 987.264 739.208 987.264  c
740.114 987.264 740.838 987.490 741.380 987.943  c
741.921 988.396 742.192 989.003 742.192 989.764  c
742.192 990.118 742.124 990.456 741.989 990.779  c
741.854 991.102 741.609 991.482 741.255 991.920  c
741.150 992.035 740.838 992.363 740.317 992.904  c
739.796 993.446 739.057 994.201 738.098 995.170  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
749.240 1020.00 m
749.240 1028.28 742.524 1035.00 734.240 1035.00  c
725.956 1035.00 719.240 1028.28 719.240 1020.00  c
719.240 1011.72 725.956 1005.00 734.240 1005.00  c
742.524 1005.00 749.240 1011.72 749.240 1020.00  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
837.479 1003.63 m
842.120 1003.63 l
842.120 1004.63 l
838.558 1004.63 l
838.558 1006.77 l
838.735 1006.71 838.909 1006.66 839.081 1006.64  c
839.253 1006.61 839.422 1006.60 839.589 1006.60  c
840.568 1006.60 841.344 1006.87 841.917 1007.40  c
842.490 1007.94 842.776 1008.66 842.776 1009.57  c
842.776 1010.51 842.482 1011.25 841.894 1011.77  c
841.305 1012.29 840.479 1012.55 839.417 1012.55  c
839.042 1012.55 838.664 1012.52 838.284 1012.46  c
837.904 1012.40 837.511 1012.30 837.104 1012.18  c
837.104 1010.99 l
837.459 1011.18 837.823 1011.32 838.198 1011.41  c
838.573 1011.50 838.969 1011.55 839.386 1011.55  c
840.063 1011.55 840.599 1011.37 840.995 1011.02  c
841.391 1010.67 841.589 1010.18 841.589 1009.57  c
841.589 1008.96 841.391 1008.48 840.995 1008.13  c
840.599 1007.78 840.063 1007.60 839.386 1007.60  c
839.073 1007.60 838.758 1007.63 838.440 1007.70  c
838.123 1007.77 837.802 1007.87 837.479 1008.02  c
837.479 1003.63 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
832.757 978.426 m
832.382 978.416 832.174 978.223 832.132 977.848  c
832.132 977.744 832.160 977.642 832.218 977.543  c
832.275 977.444 832.356 977.366 832.460 977.309  c
832.564 977.252 832.674 977.223 832.788 977.223  c
832.892 977.223 832.999 977.252 833.108 977.309  c
833.218 977.366 833.299 977.444 833.351 977.543  c
833.403 977.642 833.429 977.744 833.429 977.848  c
833.418 978.098 833.299 978.270 833.069 978.364  c
834.476 981.317 l
834.163 977.208 l
833.840 977.208 833.642 977.025 833.569 976.661  c
833.569 976.556 833.598 976.455 833.655 976.356  c
833.713 976.257 833.793 976.181 833.897 976.129  c
834.002 976.077 834.116 976.051 834.241 976.051  c
834.345 976.051 834.450 976.077 834.554 976.129  c
834.658 976.181 834.739 976.257 834.796 976.356  c
834.853 976.455 834.882 976.556 834.882 976.661  c
834.871 976.838 834.778 976.994 834.601 977.129  c
835.710 981.504 l
835.960 976.708 l
835.700 976.593 835.564 976.442 835.554 976.254  c
835.554 976.140 835.582 976.033 835.640 975.934  c
835.697 975.835 835.778 975.760 835.882 975.708  c
835.986 975.655 836.090 975.629 836.194 975.629  c
836.309 975.629 836.418 975.655 836.522 975.708  c
836.627 975.760 836.707 975.835 836.765 975.934  c
836.822 976.033 836.851 976.140 836.851 976.254  c
836.840 976.463 836.705 976.614 836.444 976.708  c
836.663 981.520 l
837.757 977.192 l
837.580 977.004 837.491 976.827 837.491 976.661  c
837.491 976.556 837.517 976.455 837.569 976.356  c
837.621 976.257 837.702 976.181 837.812 976.129  c
837.921 976.077 838.028 976.051 838.132 976.051  c
838.246 976.051 838.356 976.077 838.460 976.129  c
838.564 976.181 838.645 976.257 838.702 976.356  c
838.759 976.455 838.788 976.556 838.788 976.661  c
838.746 976.994 838.559 977.192 838.226 977.254  c
837.679 981.317 l
839.194 978.301 l
839.028 978.176 838.944 978.025 838.944 977.848  c
838.944 977.744 838.970 977.642 839.022 977.543  c
839.075 977.444 839.153 977.369 839.257 977.317  c
839.361 977.265 839.470 977.239 839.585 977.239  c
839.700 977.239 839.809 977.265 839.913 977.317  c
840.017 977.369 840.098 977.444 840.155 977.543  c
840.213 977.642 840.241 977.744 840.241 977.848  c
840.189 978.223 839.970 978.411 839.585 978.411  c
838.647 981.114 l
838.647 984.395 l
833.601 984.395 l
833.601 981.114 l
832.757 978.426 l
h
838.304 982.301 m
838.304 981.848 l
834.054 981.848 l
834.054 982.301 l
838.304 982.301 l
h
838.304 984.051 m
838.304 983.598 l
834.054 983.598 l
834.054 984.051 l
838.304 984.051 l
h
843.858 983.395 m
847.999 983.395 l
847.999 984.395 l
842.437 984.395 l
842.437 983.395 l
842.884 982.937 843.496 982.314 844.272 981.528  c
845.049 980.741 845.535 980.234 845.733 980.004  c
846.119 979.588 846.387 979.231 846.538 978.934  c
846.689 978.637 846.765 978.348 846.765 978.067  c
846.765 977.598 846.601 977.218 846.272 976.926  c
845.944 976.635 845.520 976.489 844.999 976.489  c
844.624 976.489 844.231 976.551 843.819 976.676  c
843.408 976.801 842.968 976.999 842.499 977.270  c
842.499 976.067 l
842.978 975.879 843.424 975.736 843.835 975.637  c
844.246 975.538 844.624 975.489 844.968 975.489  c
845.874 975.489 846.598 975.715 847.140 976.168  c
847.681 976.622 847.952 977.228 847.952 977.989  c
847.952 978.343 847.884 978.681 847.749 979.004  c
847.614 979.327 847.369 979.708 847.015 980.145  c
846.910 980.260 846.598 980.588 846.077 981.129  c
845.556 981.671 844.817 982.426 843.858 983.395  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
855.000 1008.23 m
855.000 1016.51 848.284 1023.23 840.000 1023.23  c
831.716 1023.23 825.000 1016.51 825.000 1008.23  c
825.000 999.941 831.716 993.225 840.000 993.225  c
848.284 993.225 855.000 999.941 855.000 1008.23  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
702.719 921.379 m
706.860 921.379 l
706.860 922.379 l
701.298 922.379 l
701.298 921.379 l
701.746 920.921 702.358 920.299 703.134 919.512  c
703.910 918.726 704.397 918.218 704.594 917.989  c
704.980 917.572 705.248 917.215 705.399 916.918  c
705.550 916.622 705.626 916.333 705.626 916.051  c
705.626 915.583 705.462 915.202 705.134 914.911  c
704.805 914.619 704.381 914.473 703.860 914.473  c
703.485 914.473 703.092 914.536 702.680 914.661  c
702.269 914.786 701.829 914.984 701.360 915.254  c
701.360 914.051 l
701.839 913.864 702.285 913.721 702.696 913.622  c
703.108 913.523 703.485 913.473 703.829 913.473  c
704.735 913.473 705.459 913.700 706.001 914.153  c
706.542 914.606 706.813 915.213 706.813 915.973  c
706.813 916.327 706.746 916.666 706.610 916.989  c
706.475 917.312 706.230 917.692 705.876 918.129  c
705.772 918.244 705.459 918.572 704.938 919.114  c
704.417 919.655 703.678 920.411 702.719 921.379  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
721.947 914.395 m
721.572 914.385 721.364 914.192 721.322 913.817  c
721.322 913.713 721.351 913.611 721.408 913.512  c
721.465 913.413 721.546 913.335 721.650 913.278  c
721.754 913.221 721.864 913.192 721.978 913.192  c
722.082 913.192 722.189 913.221 722.298 913.278  c
722.408 913.335 722.489 913.413 722.541 913.512  c
722.593 913.611 722.619 913.713 722.619 913.817  c
722.608 914.067 722.489 914.239 722.259 914.333  c
723.666 917.286 l
723.353 913.176 l
723.030 913.176 722.832 912.994 722.759 912.629  c
722.759 912.525 722.788 912.424 722.845 912.325  c
722.903 912.226 722.983 912.150 723.088 912.098  c
723.192 912.046 723.306 912.020 723.431 912.020  c
723.535 912.020 723.640 912.046 723.744 912.098  c
723.848 912.150 723.929 912.226 723.986 912.325  c
724.043 912.424 724.072 912.525 724.072 912.629  c
724.061 912.806 723.968 912.963 723.791 913.098  c
724.900 917.473 l
725.150 912.676 l
724.890 912.562 724.754 912.411 724.744 912.223  c
724.744 912.109 724.772 912.002 724.830 911.903  c
724.887 911.804 724.968 911.728 725.072 911.676  c
725.176 911.624 725.280 911.598 725.384 911.598  c
725.499 911.598 725.608 911.624 725.713 911.676  c
725.817 911.728 725.897 911.804 725.955 911.903  c
726.012 912.002 726.041 912.109 726.041 912.223  c
726.030 912.431 725.895 912.583 725.634 912.676  c
725.853 917.489 l
726.947 913.161 l
726.770 912.973 726.681 912.796 726.681 912.629  c
726.681 912.525 726.707 912.424 726.759 912.325  c
726.811 912.226 726.892 912.150 727.002 912.098  c
727.111 912.046 727.218 912.020 727.322 912.020  c
727.436 912.020 727.546 912.046 727.650 912.098  c
727.754 912.150 727.835 912.226 727.892 912.325  c
727.950 912.424 727.978 912.525 727.978 912.629  c
727.936 912.963 727.749 913.161 727.416 913.223  c
726.869 917.286 l
728.384 914.270 l
728.218 914.145 728.134 913.994 728.134 913.817  c
728.134 913.713 728.160 913.611 728.213 913.512  c
728.265 913.413 728.343 913.338 728.447 913.286  c
728.551 913.234 728.660 913.208 728.775 913.208  c
728.890 913.208 728.999 913.234 729.103 913.286  c
729.207 913.338 729.288 913.413 729.345 913.512  c
729.403 913.611 729.431 913.713 729.431 913.817  c
729.379 914.192 729.160 914.379 728.775 914.379  c
727.838 917.083 l
727.838 920.364 l
722.791 920.364 l
722.791 917.083 l
721.947 914.395 l
h
727.494 918.270 m
727.494 917.817 l
723.244 917.817 l
723.244 918.270 l
727.494 918.270 l
h
727.494 920.020 m
727.494 919.567 l
723.244 919.567 l
723.244 920.020 l
727.494 920.020 l
h
733.048 919.364 m
737.189 919.364 l
737.189 920.364 l
731.627 920.364 l
731.627 919.364 l
732.075 918.905 732.686 918.283 733.463 917.497  c
734.239 916.710 734.726 916.202 734.923 915.973  c
735.309 915.556 735.577 915.200 735.728 914.903  c
735.879 914.606 735.955 914.317 735.955 914.036  c
735.955 913.567 735.791 913.187 735.463 912.895  c
735.134 912.603 734.710 912.458 734.189 912.458  c
733.814 912.458 733.421 912.520 733.009 912.645  c
732.598 912.770 732.158 912.968 731.689 913.239  c
731.689 912.036 l
732.168 911.848 732.614 911.705 733.025 911.606  c
733.436 911.507 733.814 911.458 734.158 911.458  c
735.064 911.458 735.788 911.684 736.330 912.137  c
736.871 912.590 737.142 913.197 737.142 913.958  c
737.142 914.312 737.075 914.650 736.939 914.973  c
736.804 915.296 736.559 915.676 736.205 916.114  c
736.101 916.228 735.788 916.556 735.267 917.098  c
734.746 917.640 734.007 918.395 733.048 919.364  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
719.240 918.225 m
719.240 926.509 712.524 933.225 704.240 933.225  c
695.956 933.225 689.240 926.509 689.240 918.225  c
689.240 909.941 695.956 903.225 704.240 903.225  c
712.524 903.225 719.240 909.941 719.240 918.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
923.440 971.225 m
923.440 1002.83 l
S
newpath
923.440 963.225 m
918.440 975.225 l
923.440 972.225 l
928.440 975.225 l
h
f
newpath
923.440 1010.83 m
928.440 998.825 l
923.440 1001.83 l
918.440 998.825 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
779.489 965.872 m
748.991 1002.35 l
S
newpath
784.620 959.734 m
773.087 965.734 l
778.847 966.639 l
780.759 972.147 l
h
f
newpath
743.861 1008.49 m
755.393 1002.49 l
749.633 1001.59 l
747.721 996.078 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
808.188 966.513 m
826.052 989.937 l
S
newpath
803.336 960.152 m
806.638 972.726 l
808.794 967.308 l
814.589 966.662 l
h
f
newpath
830.904 996.298 m
827.602 983.724 l
825.446 989.142 l
819.651 989.788 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
757.099 1017.46 m
817.141 1010.77 l
S
newpath
749.148 1018.34 m
761.627 1021.98 l
758.093 1017.34 l
760.521 1012.04 l
h
f
newpath
825.092 1009.88 m
812.613 1006.24 l
816.147 1010.88 l
813.719 1016.18 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
862.505 1012.97 m
900.935 1021.08 l
S
newpath
854.677 1011.32 m
865.387 1018.69 l
863.483 1013.18 l
867.451 1008.91 l
h
f
newpath
908.763 1022.73 m
898.053 1015.36 l
899.957 1020.87 l
895.989 1025.14 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
718.470 922.969 m
772.420 940.952 l
S
newpath
780.010 943.482 m
770.207 934.944 l
771.472 940.636 l
767.044 944.430 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
