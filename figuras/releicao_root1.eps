%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 292 186
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, March 7, 2016 8:53:34 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
292 186 setpagesize
0 0 0 0 setmargins
0 0 setorigin
292 186 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
292.000 0.00000 l
292.000 186.000 l
0.00000 186.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
292.000 0.00000 l
292.000 186.000 l
0.00000 186.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 292 186 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -105.000 -30.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
105.000 30.0000 m
397.000 30.0000 l
397.000 216.000 l
105.000 216.000 l
105.000 30.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -105.000 -30.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -105.000 -30.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -105.000 -30.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
134.219 81.3794 m
138.360 81.3794 l
138.360 82.3794 l
132.798 82.3794 l
132.798 81.3794 l
133.246 80.9211 133.858 80.2987 134.634 79.5122  c
135.410 78.7258 135.897 78.2180 136.094 77.9888  c
136.480 77.5721 136.748 77.2154 136.899 76.9185  c
137.050 76.6216 137.126 76.3326 137.126 76.0513  c
137.126 75.5826 136.962 75.2023 136.634 74.9107  c
136.305 74.6190 135.881 74.4732 135.360 74.4732  c
134.985 74.4732 134.592 74.5357 134.180 74.6607  c
133.769 74.7857 133.329 74.9836 132.860 75.2544  c
132.860 74.0513 l
133.339 73.8638 133.785 73.7206 134.196 73.6216  c
134.608 73.5227 134.985 73.4732 135.329 73.4732  c
136.235 73.4732 136.959 73.6997 137.501 74.1529  c
138.042 74.6060 138.313 75.2128 138.313 75.9732  c
138.313 76.3273 138.246 76.6659 138.110 76.9888  c
137.975 77.3117 137.730 77.6919 137.376 78.1294  c
137.272 78.2440 136.959 78.5721 136.438 79.1138  c
135.917 79.6555 135.178 80.4107 134.219 81.3794  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
153.447 74.3951 m
153.072 74.3846 152.864 74.1919 152.822 73.8169  c
152.822 73.7128 152.851 73.6112 152.908 73.5122  c
152.965 73.4133 153.046 73.3352 153.150 73.2779  c
153.254 73.2206 153.364 73.1919 153.478 73.1919  c
153.582 73.1919 153.689 73.2206 153.798 73.2779  c
153.908 73.3352 153.989 73.4133 154.041 73.5122  c
154.093 73.6112 154.119 73.7128 154.119 73.8169  c
154.108 74.0669 153.989 74.2388 153.759 74.3326  c
155.166 77.2857 l
154.853 73.1763 l
154.530 73.1763 154.332 72.9940 154.259 72.6294  c
154.259 72.5253 154.288 72.4237 154.345 72.3247  c
154.403 72.2258 154.483 72.1503 154.588 72.0982  c
154.692 72.0461 154.806 72.0201 154.931 72.0201  c
155.035 72.0201 155.140 72.0461 155.244 72.0982  c
155.348 72.1503 155.429 72.2258 155.486 72.3247  c
155.543 72.4237 155.572 72.5253 155.572 72.6294  c
155.561 72.8065 155.468 72.9628 155.291 73.0982  c
156.400 77.4732 l
156.650 72.6763 l
156.390 72.5617 156.254 72.4107 156.244 72.2232  c
156.244 72.1086 156.272 72.0018 156.330 71.9029  c
156.387 71.8039 156.468 71.7284 156.572 71.6763  c
156.676 71.6242 156.780 71.5982 156.884 71.5982  c
156.999 71.5982 157.108 71.6242 157.213 71.6763  c
157.317 71.7284 157.397 71.8039 157.455 71.9029  c
157.512 72.0018 157.541 72.1086 157.541 72.2232  c
157.530 72.4315 157.395 72.5826 157.134 72.6763  c
157.353 77.4888 l
158.447 73.1607 l
158.270 72.9732 158.181 72.7961 158.181 72.6294  c
158.181 72.5253 158.207 72.4237 158.259 72.3247  c
158.311 72.2258 158.392 72.1503 158.502 72.0982  c
158.611 72.0461 158.718 72.0201 158.822 72.0201  c
158.936 72.0201 159.046 72.0461 159.150 72.0982  c
159.254 72.1503 159.335 72.2258 159.392 72.3247  c
159.450 72.4237 159.478 72.5253 159.478 72.6294  c
159.436 72.9628 159.249 73.1607 158.916 73.2232  c
158.369 77.2857 l
159.884 74.2701 l
159.718 74.1451 159.634 73.9940 159.634 73.8169  c
159.634 73.7128 159.660 73.6112 159.713 73.5122  c
159.765 73.4133 159.843 73.3378 159.947 73.2857  c
160.051 73.2336 160.160 73.2076 160.275 73.2076  c
160.390 73.2076 160.499 73.2336 160.603 73.2857  c
160.707 73.3378 160.788 73.4133 160.845 73.5122  c
160.903 73.6112 160.931 73.7128 160.931 73.8169  c
160.879 74.1919 160.660 74.3794 160.275 74.3794  c
159.338 77.0826 l
159.338 80.3638 l
154.291 80.3638 l
154.291 77.0826 l
153.447 74.3951 l
h
158.994 78.2701 m
158.994 77.8169 l
154.744 77.8169 l
154.744 78.2701 l
158.994 78.2701 l
h
158.994 80.0201 m
158.994 79.5669 l
154.744 79.5669 l
154.744 80.0201 l
158.994 80.0201 l
h
164.548 79.3638 m
168.689 79.3638 l
168.689 80.3638 l
163.127 80.3638 l
163.127 79.3638 l
163.575 78.9055 164.186 78.2831 164.963 77.4966  c
165.739 76.7102 166.226 76.2023 166.423 75.9732  c
166.809 75.5565 167.077 75.1997 167.228 74.9029  c
167.379 74.6060 167.455 74.3169 167.455 74.0357  c
167.455 73.5669 167.291 73.1867 166.963 72.8951  c
166.634 72.6034 166.210 72.4576 165.689 72.4576  c
165.314 72.4576 164.921 72.5201 164.509 72.6451  c
164.098 72.7701 163.658 72.9680 163.189 73.2388  c
163.189 72.0357 l
163.668 71.8482 164.114 71.7049 164.525 71.6060  c
164.936 71.5070 165.314 71.4576 165.658 71.4576  c
166.564 71.4576 167.288 71.6841 167.830 72.1372  c
168.371 72.5904 168.642 73.1971 168.642 73.9576  c
168.642 74.3117 168.575 74.6503 168.439 74.9732  c
168.304 75.2961 168.059 75.6763 167.705 76.1138  c
167.601 76.2284 167.288 76.5565 166.767 77.0982  c
166.246 77.6398 165.507 78.3951 164.548 79.3638  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
150.740 78.2251 m
150.740 86.5094 144.024 93.2251 135.740 93.2251  c
127.456 93.2251 120.740 86.5094 120.740 78.2251  c
120.740 69.9409 127.456 63.2251 135.740 63.2251  c
144.024 63.2251 150.740 69.9409 150.740 78.2251  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
268.979 163.629 m
273.620 163.629 l
273.620 164.629 l
270.058 164.629 l
270.058 166.770 l
270.235 166.708 270.409 166.663 270.581 166.637  c
270.753 166.611 270.922 166.598 271.089 166.598  c
272.068 166.598 272.844 166.866 273.417 167.403  c
273.990 167.939 274.276 168.661 274.276 169.567  c
274.276 170.515 273.982 171.249 273.394 171.770  c
272.805 172.291 271.979 172.551 270.917 172.551  c
270.542 172.551 270.164 172.520 269.784 172.458  c
269.404 172.395 269.011 172.301 268.604 172.176  c
268.604 170.989 l
268.959 171.176 269.323 171.317 269.698 171.411  c
270.073 171.504 270.469 171.551 270.886 171.551  c
271.563 171.551 272.099 171.374 272.495 171.020  c
272.891 170.666 273.089 170.182 273.089 169.567  c
273.089 168.963 272.891 168.484 272.495 168.129  c
272.099 167.775 271.563 167.598 270.886 167.598  c
270.573 167.598 270.258 167.632 269.940 167.700  c
269.623 167.767 269.302 167.874 268.979 168.020  c
268.979 163.629 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
264.257 138.426 m
263.882 138.416 263.674 138.223 263.632 137.848  c
263.632 137.744 263.660 137.642 263.718 137.543  c
263.775 137.445 263.856 137.366 263.960 137.309  c
264.064 137.252 264.174 137.223 264.288 137.223  c
264.392 137.223 264.499 137.252 264.608 137.309  c
264.718 137.366 264.799 137.445 264.851 137.543  c
264.903 137.642 264.929 137.744 264.929 137.848  c
264.918 138.098 264.799 138.270 264.569 138.364  c
265.976 141.317 l
265.663 137.208 l
265.340 137.208 265.142 137.025 265.069 136.661  c
265.069 136.557 265.098 136.455 265.155 136.356  c
265.213 136.257 265.293 136.182 265.397 136.129  c
265.502 136.077 265.616 136.051 265.741 136.051  c
265.845 136.051 265.950 136.077 266.054 136.129  c
266.158 136.182 266.239 136.257 266.296 136.356  c
266.353 136.455 266.382 136.557 266.382 136.661  c
266.371 136.838 266.278 136.994 266.101 137.129  c
267.210 141.504 l
267.460 136.708 l
267.200 136.593 267.064 136.442 267.054 136.254  c
267.054 136.140 267.082 136.033 267.140 135.934  c
267.197 135.835 267.278 135.760 267.382 135.708  c
267.486 135.655 267.590 135.629 267.694 135.629  c
267.809 135.629 267.918 135.655 268.022 135.708  c
268.127 135.760 268.207 135.835 268.265 135.934  c
268.322 136.033 268.351 136.140 268.351 136.254  c
268.340 136.463 268.205 136.614 267.944 136.708  c
268.163 141.520 l
269.257 137.192 l
269.080 137.004 268.991 136.827 268.991 136.661  c
268.991 136.557 269.017 136.455 269.069 136.356  c
269.121 136.257 269.202 136.182 269.312 136.129  c
269.421 136.077 269.528 136.051 269.632 136.051  c
269.746 136.051 269.856 136.077 269.960 136.129  c
270.064 136.182 270.145 136.257 270.202 136.356  c
270.259 136.455 270.288 136.557 270.288 136.661  c
270.246 136.994 270.059 137.192 269.726 137.254  c
269.179 141.317 l
270.694 138.301 l
270.528 138.176 270.444 138.025 270.444 137.848  c
270.444 137.744 270.470 137.642 270.522 137.543  c
270.575 137.445 270.653 137.369 270.757 137.317  c
270.861 137.265 270.970 137.239 271.085 137.239  c
271.200 137.239 271.309 137.265 271.413 137.317  c
271.517 137.369 271.598 137.445 271.655 137.543  c
271.713 137.642 271.741 137.744 271.741 137.848  c
271.689 138.223 271.470 138.411 271.085 138.411  c
270.147 141.114 l
270.147 144.395 l
265.101 144.395 l
265.101 141.114 l
264.257 138.426 l
h
269.804 142.301 m
269.804 141.848 l
265.554 141.848 l
265.554 142.301 l
269.804 142.301 l
h
269.804 144.051 m
269.804 143.598 l
265.554 143.598 l
265.554 144.051 l
269.804 144.051 l
h
275.358 143.395 m
279.499 143.395 l
279.499 144.395 l
273.937 144.395 l
273.937 143.395 l
274.384 142.937 274.996 142.314 275.772 141.528  c
276.549 140.741 277.035 140.234 277.233 140.004  c
277.619 139.588 277.887 139.231 278.038 138.934  c
278.189 138.637 278.265 138.348 278.265 138.067  c
278.265 137.598 278.101 137.218 277.772 136.926  c
277.444 136.635 277.020 136.489 276.499 136.489  c
276.124 136.489 275.731 136.551 275.319 136.676  c
274.908 136.801 274.468 136.999 273.999 137.270  c
273.999 136.067 l
274.478 135.879 274.924 135.736 275.335 135.637  c
275.746 135.538 276.124 135.489 276.468 135.489  c
277.374 135.489 278.098 135.715 278.640 136.168  c
279.181 136.622 279.452 137.228 279.452 137.989  c
279.452 138.343 279.384 138.682 279.249 139.004  c
279.114 139.327 278.869 139.708 278.515 140.145  c
278.410 140.260 278.098 140.588 277.577 141.129  c
277.056 141.671 276.317 142.426 275.358 143.395  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
286.500 168.225 m
286.500 176.509 279.784 183.225 271.500 183.225  c
263.216 183.225 256.500 176.509 256.500 168.225  c
256.500 159.941 263.216 153.225 271.500 153.225  c
279.784 153.225 286.500 159.941 286.500 168.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
165.891 179.311 m
165.360 179.311 164.938 179.493 164.626 179.857  c
164.313 180.222 164.157 180.717 164.157 181.342  c
164.157 181.977 164.313 182.477 164.626 182.842  c
164.938 183.206 165.360 183.389 165.891 183.389  c
166.423 183.389 166.842 183.206 167.149 182.842  c
167.456 182.477 167.610 181.977 167.610 181.342  c
167.610 180.717 167.456 180.222 167.149 179.857  c
166.842 179.493 166.423 179.311 165.891 179.311  c
h
168.235 175.592 m
168.235 176.670 l
167.933 176.535 167.631 176.430 167.329 176.357  c
167.027 176.285 166.730 176.248 166.438 176.248  c
165.657 176.248 165.061 176.511 164.649 177.037  c
164.238 177.563 164.001 178.357 163.938 179.420  c
164.167 179.087 164.456 178.829 164.805 178.646  c
165.154 178.464 165.537 178.373 165.954 178.373  c
166.829 178.373 167.522 178.639 168.032 179.170  c
168.542 179.701 168.798 180.425 168.798 181.342  c
168.798 182.248 168.532 182.972 168.001 183.514  c
167.469 184.055 166.766 184.326 165.891 184.326  c
164.871 184.326 164.094 183.938 163.563 183.162  c
163.032 182.386 162.766 181.264 162.766 179.795  c
162.766 178.410 163.094 177.305 163.751 176.482  c
164.407 175.660 165.287 175.248 166.391 175.248  c
166.683 175.248 166.980 175.277 167.282 175.334  c
167.584 175.391 167.902 175.477 168.235 175.592  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
158.497 150.201 m
158.122 150.191 157.914 149.998 157.872 149.623  c
157.872 149.519 157.900 149.417 157.958 149.318  c
158.015 149.219 158.096 149.141 158.200 149.084  c
158.304 149.027 158.414 148.998 158.528 148.998  c
158.632 148.998 158.739 149.027 158.848 149.084  c
158.958 149.141 159.039 149.219 159.091 149.318  c
159.143 149.417 159.169 149.519 159.169 149.623  c
159.158 149.873 159.039 150.045 158.809 150.139  c
160.216 153.092 l
159.903 148.982 l
159.580 148.982 159.382 148.800 159.309 148.436  c
159.309 148.331 159.338 148.230 159.395 148.131  c
159.453 148.032 159.533 147.956 159.637 147.904  c
159.742 147.852 159.856 147.826 159.981 147.826  c
160.085 147.826 160.190 147.852 160.294 147.904  c
160.398 147.956 160.479 148.032 160.536 148.131  c
160.593 148.230 160.622 148.331 160.622 148.436  c
160.611 148.613 160.518 148.769 160.341 148.904  c
161.450 153.279 l
161.700 148.482 l
161.440 148.368 161.304 148.217 161.294 148.029  c
161.294 147.915 161.322 147.808 161.380 147.709  c
161.437 147.610 161.518 147.535 161.622 147.482  c
161.726 147.430 161.830 147.404 161.934 147.404  c
162.049 147.404 162.158 147.430 162.262 147.482  c
162.367 147.535 162.447 147.610 162.505 147.709  c
162.562 147.808 162.591 147.915 162.591 148.029  c
162.580 148.238 162.445 148.389 162.184 148.482  c
162.403 153.295 l
163.497 148.967 l
163.320 148.779 163.231 148.602 163.231 148.436  c
163.231 148.331 163.257 148.230 163.309 148.131  c
163.361 148.032 163.442 147.956 163.552 147.904  c
163.661 147.852 163.768 147.826 163.872 147.826  c
163.986 147.826 164.096 147.852 164.200 147.904  c
164.304 147.956 164.385 148.032 164.442 148.131  c
164.499 148.230 164.528 148.331 164.528 148.436  c
164.486 148.769 164.299 148.967 163.966 149.029  c
163.419 153.092 l
164.934 150.076 l
164.768 149.951 164.684 149.800 164.684 149.623  c
164.684 149.519 164.710 149.417 164.762 149.318  c
164.815 149.219 164.893 149.144 164.997 149.092  c
165.101 149.040 165.210 149.014 165.325 149.014  c
165.440 149.014 165.549 149.040 165.653 149.092  c
165.757 149.144 165.838 149.219 165.895 149.318  c
165.953 149.417 165.981 149.519 165.981 149.623  c
165.929 149.998 165.710 150.186 165.325 150.186  c
164.387 152.889 l
164.387 156.170 l
159.341 156.170 l
159.341 152.889 l
158.497 150.201 l
h
164.044 154.076 m
164.044 153.623 l
159.794 153.623 l
159.794 154.076 l
164.044 154.076 l
h
164.044 155.826 m
164.044 155.373 l
159.794 155.373 l
159.794 155.826 l
164.044 155.826 l
h
169.598 155.170 m
173.739 155.170 l
173.739 156.170 l
168.177 156.170 l
168.177 155.170 l
168.624 154.712 169.236 154.089 170.012 153.303  c
170.789 152.516 171.275 152.008 171.473 151.779  c
171.859 151.363 172.127 151.006 172.278 150.709  c
172.429 150.412 172.505 150.123 172.505 149.842  c
172.505 149.373 172.341 148.993 172.012 148.701  c
171.684 148.410 171.260 148.264 170.739 148.264  c
170.364 148.264 169.971 148.326 169.559 148.451  c
169.148 148.576 168.708 148.774 168.239 149.045  c
168.239 147.842 l
168.718 147.654 169.164 147.511 169.575 147.412  c
169.986 147.313 170.364 147.264 170.708 147.264  c
171.614 147.264 172.338 147.490 172.880 147.943  c
173.421 148.396 173.692 149.003 173.692 149.764  c
173.692 150.118 173.624 150.456 173.489 150.779  c
173.354 151.102 173.109 151.482 172.755 151.920  c
172.650 152.035 172.338 152.363 171.817 152.904  c
171.296 153.446 170.557 154.201 169.598 155.170  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
180.740 180.000 m
180.740 188.284 174.024 195.000 165.740 195.000  c
157.456 195.000 150.740 188.284 150.740 180.000  c
150.740 171.716 157.456 165.000 165.740 165.000  c
174.024 165.000 180.740 171.716 180.740 180.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
226.798 107.661 m
227.360 107.786 227.800 108.038 228.118 108.418  c
228.436 108.799 228.594 109.270 228.594 109.833  c
228.594 110.697 228.298 111.366 227.704 111.840  c
227.110 112.314 226.266 112.551 225.173 112.551  c
224.808 112.551 224.430 112.515 224.040 112.442  c
223.649 112.369 223.251 112.260 222.844 112.114  c
222.844 110.973 l
223.167 111.161 223.524 111.304 223.915 111.403  c
224.305 111.502 224.714 111.551 225.141 111.551  c
225.881 111.551 226.446 111.405 226.837 111.114  c
227.227 110.822 227.423 110.395 227.423 109.833  c
227.423 109.322 227.240 108.921 226.876 108.629  c
226.511 108.338 226.011 108.192 225.376 108.192  c
224.344 108.192 l
224.344 107.223 l
225.423 107.223 l
225.996 107.223 226.438 107.106 226.751 106.872  c
227.063 106.637 227.219 106.301 227.219 105.864  c
227.219 105.416 227.061 105.072 226.743 104.833  c
226.425 104.593 225.969 104.473 225.376 104.473  c
225.042 104.473 224.691 104.507 224.321 104.575  c
223.951 104.642 223.542 104.749 223.094 104.895  c
223.094 103.848 l
223.553 103.723 223.977 103.629 224.368 103.567  c
224.759 103.504 225.126 103.473 225.469 103.473  c
226.376 103.473 227.089 103.676 227.610 104.083  c
228.131 104.489 228.391 105.041 228.391 105.739  c
228.391 106.228 228.253 106.640 227.977 106.973  c
227.701 107.307 227.308 107.536 226.798 107.661  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
218.497 78.4263 m
218.122 78.4159 217.914 78.2232 217.872 77.8482  c
217.872 77.7440 217.900 77.6424 217.958 77.5435  c
218.015 77.4445 218.096 77.3664 218.200 77.3091  c
218.304 77.2518 218.414 77.2232 218.528 77.2232  c
218.632 77.2232 218.739 77.2518 218.848 77.3091  c
218.958 77.3664 219.039 77.4445 219.091 77.5435  c
219.143 77.6424 219.169 77.7440 219.169 77.8482  c
219.158 78.0982 219.039 78.2701 218.809 78.3638  c
220.216 81.3169 l
219.903 77.2076 l
219.580 77.2076 219.382 77.0253 219.309 76.6607  c
219.309 76.5565 219.338 76.4549 219.395 76.3560  c
219.453 76.2570 219.533 76.1815 219.637 76.1294  c
219.742 76.0773 219.856 76.0513 219.981 76.0513  c
220.085 76.0513 220.190 76.0773 220.294 76.1294  c
220.398 76.1815 220.479 76.2570 220.536 76.3560  c
220.593 76.4549 220.622 76.5565 220.622 76.6607  c
220.611 76.8378 220.518 76.9940 220.341 77.1294  c
221.450 81.5044 l
221.700 76.7076 l
221.440 76.5930 221.304 76.4419 221.294 76.2544  c
221.294 76.1398 221.322 76.0331 221.380 75.9341  c
221.437 75.8352 221.518 75.7596 221.622 75.7076  c
221.726 75.6555 221.830 75.6294 221.934 75.6294  c
222.049 75.6294 222.158 75.6555 222.262 75.7076  c
222.367 75.7596 222.447 75.8352 222.505 75.9341  c
222.562 76.0331 222.591 76.1398 222.591 76.2544  c
222.580 76.4628 222.445 76.6138 222.184 76.7076  c
222.403 81.5201 l
223.497 77.1919 l
223.320 77.0044 223.231 76.8273 223.231 76.6607  c
223.231 76.5565 223.257 76.4549 223.309 76.3560  c
223.361 76.2570 223.442 76.1815 223.552 76.1294  c
223.661 76.0773 223.768 76.0513 223.872 76.0513  c
223.986 76.0513 224.096 76.0773 224.200 76.1294  c
224.304 76.1815 224.385 76.2570 224.442 76.3560  c
224.499 76.4549 224.528 76.5565 224.528 76.6607  c
224.486 76.9940 224.299 77.1919 223.966 77.2544  c
223.419 81.3169 l
224.934 78.3013 l
224.768 78.1763 224.684 78.0253 224.684 77.8482  c
224.684 77.7440 224.710 77.6424 224.762 77.5435  c
224.815 77.4445 224.893 77.3690 224.997 77.3169  c
225.101 77.2648 225.210 77.2388 225.325 77.2388  c
225.440 77.2388 225.549 77.2648 225.653 77.3169  c
225.757 77.3690 225.838 77.4445 225.895 77.5435  c
225.953 77.6424 225.981 77.7440 225.981 77.8482  c
225.929 78.2232 225.710 78.4107 225.325 78.4107  c
224.387 81.1138 l
224.387 84.3951 l
219.341 84.3951 l
219.341 81.1138 l
218.497 78.4263 l
h
224.044 82.3013 m
224.044 81.8482 l
219.794 81.8482 l
219.794 82.3013 l
224.044 82.3013 l
h
224.044 84.0513 m
224.044 83.5982 l
219.794 83.5982 l
219.794 84.0513 l
224.044 84.0513 l
h
229.598 83.3951 m
233.739 83.3951 l
233.739 84.3951 l
228.177 84.3951 l
228.177 83.3951 l
228.624 82.9367 229.236 82.3143 230.012 81.5279  c
230.789 80.7414 231.275 80.2336 231.473 80.0044  c
231.859 79.5878 232.127 79.2310 232.278 78.9341  c
232.429 78.6372 232.505 78.3482 232.505 78.0669  c
232.505 77.5982 232.341 77.2180 232.012 76.9263  c
231.684 76.6346 231.260 76.4888 230.739 76.4888  c
230.364 76.4888 229.971 76.5513 229.559 76.6763  c
229.148 76.8013 228.708 76.9992 228.239 77.2701  c
228.239 76.0669 l
228.718 75.8794 229.164 75.7362 229.575 75.6372  c
229.986 75.5383 230.364 75.4888 230.708 75.4888  c
231.614 75.4888 232.338 75.7154 232.880 76.1685  c
233.421 76.6216 233.692 77.2284 233.692 77.9888  c
233.692 78.3430 233.624 78.6815 233.489 79.0044  c
233.354 79.3273 233.109 79.7076 232.755 80.1451  c
232.650 80.2596 232.338 80.5878 231.817 81.1294  c
231.296 81.6711 230.557 82.4263 229.598 83.3951  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
240.740 108.225 m
240.740 116.509 234.024 123.225 225.740 123.225  c
217.456 123.225 210.740 116.509 210.740 108.225  c
210.740 99.9409 217.456 93.2251 225.740 93.2251  c
234.024 93.2251 240.740 99.9409 240.740 108.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
355.654 104.661 m
352.669 109.333 l
355.654 109.333 l
355.654 104.661 l
h
355.341 103.629 m
356.841 103.629 l
356.841 109.333 l
358.091 109.333 l
358.091 110.317 l
356.841 110.317 l
356.841 112.379 l
355.654 112.379 l
355.654 110.317 l
351.716 110.317 l
351.716 109.176 l
355.341 103.629 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
320.564 106.411 m
320.189 106.400 319.980 106.208 319.939 105.833  c
319.939 105.728 319.967 105.627 320.025 105.528  c
320.082 105.429 320.163 105.351 320.267 105.293  c
320.371 105.236 320.480 105.208 320.595 105.208  c
320.699 105.208 320.806 105.236 320.915 105.293  c
321.025 105.351 321.105 105.429 321.157 105.528  c
321.210 105.627 321.236 105.728 321.236 105.833  c
321.225 106.083 321.105 106.254 320.876 106.348  c
322.282 109.301 l
321.970 105.192 l
321.647 105.192 321.449 105.010 321.376 104.645  c
321.376 104.541 321.405 104.439 321.462 104.340  c
321.519 104.241 321.600 104.166 321.704 104.114  c
321.809 104.062 321.923 104.036 322.048 104.036  c
322.152 104.036 322.256 104.062 322.361 104.114  c
322.465 104.166 322.545 104.241 322.603 104.340  c
322.660 104.439 322.689 104.541 322.689 104.645  c
322.678 104.822 322.585 104.978 322.407 105.114  c
323.517 109.489 l
323.767 104.692 l
323.506 104.577 323.371 104.426 323.361 104.239  c
323.361 104.124 323.389 104.017 323.447 103.918  c
323.504 103.820 323.585 103.744 323.689 103.692  c
323.793 103.640 323.897 103.614 324.001 103.614  c
324.116 103.614 324.225 103.640 324.329 103.692  c
324.434 103.744 324.514 103.820 324.572 103.918  c
324.629 104.017 324.657 104.124 324.657 104.239  c
324.647 104.447 324.512 104.598 324.251 104.692  c
324.470 109.504 l
325.564 105.176 l
325.387 104.989 325.298 104.812 325.298 104.645  c
325.298 104.541 325.324 104.439 325.376 104.340  c
325.428 104.241 325.509 104.166 325.618 104.114  c
325.728 104.062 325.835 104.036 325.939 104.036  c
326.053 104.036 326.163 104.062 326.267 104.114  c
326.371 104.166 326.452 104.241 326.509 104.340  c
326.566 104.439 326.595 104.541 326.595 104.645  c
326.553 104.978 326.366 105.176 326.032 105.239  c
325.486 109.301 l
327.001 106.286 l
326.835 106.161 326.751 106.010 326.751 105.833  c
326.751 105.728 326.777 105.627 326.829 105.528  c
326.881 105.429 326.960 105.353 327.064 105.301  c
327.168 105.249 327.277 105.223 327.392 105.223  c
327.506 105.223 327.616 105.249 327.720 105.301  c
327.824 105.353 327.905 105.429 327.962 105.528  c
328.019 105.627 328.048 105.728 328.048 105.833  c
327.996 106.208 327.777 106.395 327.392 106.395  c
326.454 109.098 l
326.454 112.379 l
321.407 112.379 l
321.407 109.098 l
320.564 106.411 l
h
326.111 110.286 m
326.111 109.833 l
321.861 109.833 l
321.861 110.286 l
326.111 110.286 l
h
326.111 112.036 m
326.111 111.583 l
321.861 111.583 l
321.861 112.036 l
326.111 112.036 l
h
331.665 111.379 m
335.806 111.379 l
335.806 112.379 l
330.243 112.379 l
330.243 111.379 l
330.691 110.921 331.303 110.299 332.079 109.512  c
332.855 108.726 333.342 108.218 333.540 107.989  c
333.926 107.572 334.194 107.215 334.345 106.918  c
334.496 106.622 334.572 106.333 334.572 106.051  c
334.572 105.583 334.407 105.202 334.079 104.911  c
333.751 104.619 333.327 104.473 332.806 104.473  c
332.431 104.473 332.038 104.536 331.626 104.661  c
331.215 104.786 330.775 104.984 330.306 105.254  c
330.306 104.051 l
330.785 103.864 331.230 103.721 331.642 103.622  c
332.053 103.523 332.431 103.473 332.775 103.473  c
333.681 103.473 334.405 103.700 334.947 104.153  c
335.488 104.606 335.759 105.213 335.759 105.973  c
335.759 106.327 335.691 106.666 335.556 106.989  c
335.420 107.312 335.176 107.692 334.822 108.129  c
334.717 108.244 334.405 108.572 333.884 109.114  c
333.363 109.655 332.624 110.411 331.665 111.379  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
369.940 108.225 m
369.940 116.509 363.224 123.225 354.940 123.225  c
346.656 123.225 339.940 116.509 339.940 108.225  c
339.940 99.9409 346.656 93.2251 354.940 93.2251  c
363.224 93.2251 369.940 99.9409 369.940 108.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
352.107 181.229 m
357.732 181.229 l
357.732 181.729 l
354.560 189.979 l
353.326 189.979 l
356.310 182.229 l
352.107 182.229 l
352.107 181.229 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
362.697 160.773 m
362.322 160.763 362.114 160.570 362.072 160.195  c
362.072 160.091 362.100 159.989 362.158 159.890  c
362.215 159.791 362.296 159.713 362.400 159.656  c
362.504 159.599 362.614 159.570 362.728 159.570  c
362.832 159.570 362.939 159.599 363.048 159.656  c
363.158 159.713 363.239 159.791 363.291 159.890  c
363.343 159.989 363.369 160.091 363.369 160.195  c
363.358 160.445 363.239 160.617 363.009 160.711  c
364.416 163.664 l
364.103 159.554 l
363.780 159.554 363.582 159.372 363.509 159.008  c
363.509 158.903 363.538 158.802 363.595 158.703  c
363.653 158.604 363.733 158.528 363.837 158.476  c
363.942 158.424 364.056 158.398 364.181 158.398  c
364.285 158.398 364.390 158.424 364.494 158.476  c
364.598 158.528 364.679 158.604 364.736 158.703  c
364.793 158.802 364.822 158.903 364.822 159.008  c
364.811 159.185 364.718 159.341 364.541 159.476  c
365.650 163.851 l
365.900 159.054 l
365.640 158.940 365.504 158.789 365.494 158.601  c
365.494 158.487 365.522 158.380 365.580 158.281  c
365.637 158.182 365.718 158.107 365.822 158.054  c
365.926 158.002 366.030 157.976 366.134 157.976  c
366.249 157.976 366.358 158.002 366.462 158.054  c
366.567 158.107 366.647 158.182 366.705 158.281  c
366.762 158.380 366.791 158.487 366.791 158.601  c
366.780 158.810 366.645 158.961 366.384 159.054  c
366.603 163.867 l
367.697 159.539 l
367.520 159.351 367.431 159.174 367.431 159.008  c
367.431 158.903 367.457 158.802 367.509 158.703  c
367.561 158.604 367.642 158.528 367.752 158.476  c
367.861 158.424 367.968 158.398 368.072 158.398  c
368.186 158.398 368.296 158.424 368.400 158.476  c
368.504 158.528 368.585 158.604 368.642 158.703  c
368.699 158.802 368.728 158.903 368.728 159.008  c
368.686 159.341 368.499 159.539 368.166 159.601  c
367.619 163.664 l
369.134 160.648 l
368.968 160.523 368.884 160.372 368.884 160.195  c
368.884 160.091 368.910 159.989 368.962 159.890  c
369.015 159.791 369.093 159.716 369.197 159.664  c
369.301 159.612 369.410 159.586 369.525 159.586  c
369.640 159.586 369.749 159.612 369.853 159.664  c
369.957 159.716 370.038 159.791 370.095 159.890  c
370.153 159.989 370.181 160.091 370.181 160.195  c
370.129 160.570 369.910 160.758 369.525 160.758  c
368.587 163.461 l
368.587 166.742 l
363.541 166.742 l
363.541 163.461 l
362.697 160.773 l
h
368.244 164.648 m
368.244 164.195 l
363.994 164.195 l
363.994 164.648 l
368.244 164.648 l
h
368.244 166.398 m
368.244 165.945 l
363.994 165.945 l
363.994 166.398 l
368.244 166.398 l
h
373.798 165.742 m
377.939 165.742 l
377.939 166.742 l
372.377 166.742 l
372.377 165.742 l
372.824 165.284 373.436 164.661 374.212 163.875  c
374.989 163.088 375.475 162.581 375.673 162.351  c
376.059 161.935 376.327 161.578 376.478 161.281  c
376.629 160.984 376.705 160.695 376.705 160.414  c
376.705 159.945 376.541 159.565 376.212 159.273  c
375.884 158.982 375.460 158.836 374.939 158.836  c
374.564 158.836 374.171 158.898 373.759 159.023  c
373.348 159.148 372.908 159.346 372.439 159.617  c
372.439 158.414 l
372.918 158.226 373.364 158.083 373.775 157.984  c
374.186 157.885 374.564 157.836 374.908 157.836  c
375.814 157.836 376.538 158.062 377.080 158.515  c
377.621 158.969 377.892 159.575 377.892 160.336  c
377.892 160.690 377.824 161.028 377.689 161.351  c
377.554 161.674 377.309 162.054 376.955 162.492  c
376.850 162.607 376.538 162.935 376.017 163.476  c
375.496 164.018 374.757 164.773 373.798 165.742  c
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
369.940 185.825 m
369.940 194.109 363.224 200.825 354.940 200.825  c
346.656 200.825 339.940 194.109 339.940 185.825  c
339.940 177.541 346.656 170.825 354.940 170.825  c
363.224 170.825 369.940 177.541 369.940 185.825  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
288.007 63.1543 m
289.944 63.1543 l
289.944 56.4824 l
287.835 56.9043 l
287.835 55.8262 l
289.929 55.4043 l
291.116 55.4043 l
291.116 63.1543 l
293.054 63.1543 l
293.054 64.1543 l
288.007 64.1543 l
288.007 63.1543 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
305.340 60.0000 m
305.340 68.2843 298.624 75.0000 290.340 75.0000  c
282.056 75.0000 275.340 68.2843 275.340 60.0000  c
275.340 51.7157 282.056 45.0000 290.340 45.0000  c
298.624 45.0000 305.340 51.7157 305.340 60.0000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
188.599 177.455 m
248.641 170.770 l
S
newpath
180.648 178.340 m
193.127 181.982 l
189.593 177.344 l
192.021 172.043 l
h
f
newpath
256.592 169.885 m
244.113 166.243 l
247.647 170.881 l
245.219 176.182 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
149.970 82.9685 m
203.920 100.952 l
S
newpath
211.510 103.482 m
201.707 94.9436 l
202.972 100.636 l
198.544 104.430 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
239.688 126.513 m
257.552 149.937 l
S
newpath
234.836 120.152 m
238.138 132.726 l
240.294 127.308 l
246.089 126.662 l
h
f
newpath
262.404 156.298 m
259.102 143.724 l
256.946 149.142 l
251.151 149.788 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
210.989 125.872 m
180.491 162.354 l
S
newpath
216.119 119.734 m
204.587 125.734 l
210.347 126.639 l
212.259 132.147 l
h
f
newpath
175.361 168.491 m
186.893 162.492 l
181.133 161.586 l
179.221 156.078 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
294.005 172.972 m
332.435 181.078 l
S
newpath
286.177 171.321 m
296.887 178.690 l
294.983 173.178 l
298.951 168.905 l
h
f
newpath
340.263 182.729 m
329.553 175.360 l
331.457 180.872 l
327.489 185.145 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
354.940 131.225 m
354.940 162.825 l
S
newpath
354.940 123.225 m
349.940 135.225 l
354.940 132.225 l
359.940 135.225 l
h
f
newpath
354.940 170.825 m
359.940 158.825 l
354.940 161.825 l
349.940 158.825 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
271.909 73.7589 m
237.760 99.2519 l
S
newpath
278.320 68.9732 m
265.713 72.1451 l
271.108 74.3571 l
271.695 80.1584 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
308.771 73.7589 m
342.920 99.2519 l
S
newpath
302.360 68.9732 m
308.985 80.1584 l
309.572 74.3571 l
314.967 72.1451 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
