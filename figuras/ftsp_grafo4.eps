%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 291 168
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, March 4, 2016 8:03:00 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
291 168 setpagesize
0 0 0 0 setmargins
0 0 setorigin
291 168 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
291.000 0.00000 l
291.000 168.000 l
0.00000 168.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
291.000 0.00000 l
291.000 168.000 l
0.00000 168.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 291 168 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -684.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
674.000 684.000 m
965.000 684.000 l
965.000 852.000 l
674.000 852.000 l
674.000 684.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -684.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -684.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -674.000 -684.000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
702.719 717.329 m
706.860 717.329 l
706.860 718.329 l
701.298 718.329 l
701.298 717.329 l
701.746 716.871 702.358 716.248 703.134 715.462  c
703.910 714.676 704.397 714.168 704.594 713.939  c
704.980 713.522 705.248 713.165 705.399 712.868  c
705.550 712.571 705.626 712.282 705.626 712.001  c
705.626 711.532 705.462 711.152 705.134 710.860  c
704.805 710.569 704.381 710.423 703.860 710.423  c
703.485 710.423 703.092 710.485 702.680 710.610  c
702.269 710.735 701.829 710.933 701.360 711.204  c
701.360 710.001 l
701.839 709.814 702.285 709.670 702.696 709.571  c
703.108 709.472 703.485 709.423 703.829 709.423  c
704.735 709.423 705.459 709.649 706.001 710.103  c
706.542 710.556 706.813 711.162 706.813 711.923  c
706.813 712.277 706.746 712.616 706.610 712.939  c
706.475 713.261 706.230 713.642 705.876 714.079  c
705.772 714.194 705.459 714.522 704.938 715.064  c
704.417 715.605 703.678 716.360 702.719 717.329  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
721.947 710.345 m
721.572 710.334 721.364 710.142 721.322 709.767  c
721.322 709.662 721.351 709.561 721.408 709.462  c
721.465 709.363 721.546 709.285 721.650 709.228  c
721.754 709.170 721.864 709.142 721.978 709.142  c
722.082 709.142 722.189 709.170 722.298 709.228  c
722.408 709.285 722.489 709.363 722.541 709.462  c
722.593 709.561 722.619 709.662 722.619 709.767  c
722.608 710.017 722.489 710.189 722.259 710.282  c
723.666 713.235 l
723.353 709.126 l
723.030 709.126 722.832 708.944 722.759 708.579  c
722.759 708.475 722.788 708.373 722.845 708.274  c
722.903 708.176 722.983 708.100 723.088 708.048  c
723.192 707.996 723.306 707.970 723.431 707.970  c
723.535 707.970 723.640 707.996 723.744 708.048  c
723.848 708.100 723.929 708.176 723.986 708.274  c
724.043 708.373 724.072 708.475 724.072 708.579  c
724.061 708.756 723.968 708.912 723.791 709.048  c
724.900 713.423 l
725.150 708.626 l
724.890 708.511 724.754 708.360 724.744 708.173  c
724.744 708.058 724.772 707.952 724.830 707.853  c
724.887 707.754 724.968 707.678 725.072 707.626  c
725.176 707.574 725.280 707.548 725.384 707.548  c
725.499 707.548 725.608 707.574 725.713 707.626  c
725.817 707.678 725.897 707.754 725.955 707.853  c
726.012 707.952 726.041 708.058 726.041 708.173  c
726.030 708.381 725.895 708.532 725.634 708.626  c
725.853 713.439 l
726.947 709.110 l
726.770 708.923 726.681 708.746 726.681 708.579  c
726.681 708.475 726.707 708.373 726.759 708.274  c
726.811 708.176 726.892 708.100 727.002 708.048  c
727.111 707.996 727.218 707.970 727.322 707.970  c
727.436 707.970 727.546 707.996 727.650 708.048  c
727.754 708.100 727.835 708.176 727.892 708.274  c
727.950 708.373 727.978 708.475 727.978 708.579  c
727.936 708.912 727.749 709.110 727.416 709.173  c
726.869 713.235 l
728.384 710.220 l
728.218 710.095 728.134 709.944 728.134 709.767  c
728.134 709.662 728.160 709.561 728.213 709.462  c
728.265 709.363 728.343 709.287 728.447 709.235  c
728.551 709.183 728.660 709.157 728.775 709.157  c
728.890 709.157 728.999 709.183 729.103 709.235  c
729.207 709.287 729.288 709.363 729.345 709.462  c
729.403 709.561 729.431 709.662 729.431 709.767  c
729.379 710.142 729.160 710.329 728.775 710.329  c
727.838 713.032 l
727.838 716.314 l
722.791 716.314 l
722.791 713.032 l
721.947 710.345 l
h
727.494 714.220 m
727.494 713.767 l
723.244 713.767 l
723.244 714.220 l
727.494 714.220 l
h
727.494 715.970 m
727.494 715.517 l
723.244 715.517 l
723.244 715.970 l
727.494 715.970 l
h
733.048 715.314 m
737.189 715.314 l
737.189 716.314 l
731.627 716.314 l
731.627 715.314 l
732.075 714.855 732.686 714.233 733.463 713.446  c
734.239 712.660 734.726 712.152 734.923 711.923  c
735.309 711.506 735.577 711.149 735.728 710.853  c
735.879 710.556 735.955 710.267 735.955 709.985  c
735.955 709.517 735.791 709.136 735.463 708.845  c
735.134 708.553 734.710 708.407 734.189 708.407  c
733.814 708.407 733.421 708.470 733.009 708.595  c
732.598 708.720 732.158 708.918 731.689 709.189  c
731.689 707.985 l
732.168 707.798 732.614 707.655 733.025 707.556  c
733.436 707.457 733.814 707.407 734.158 707.407  c
735.064 707.407 735.788 707.634 736.330 708.087  c
736.871 708.540 737.142 709.147 737.142 709.907  c
737.142 710.261 737.075 710.600 736.939 710.923  c
736.804 711.246 736.559 711.626 736.205 712.064  c
736.101 712.178 735.788 712.506 735.267 713.048  c
734.746 713.590 734.007 714.345 733.048 715.314  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
719.240 714.175 m
719.240 722.459 712.524 729.175 704.240 729.175  c
695.956 729.175 689.240 722.459 689.240 714.175  c
689.240 705.891 695.956 699.175 704.240 699.175  c
712.524 699.175 719.240 705.891 719.240 714.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
837.479 799.579 m
842.120 799.579 l
842.120 800.579 l
838.558 800.579 l
838.558 802.720 l
838.735 802.657 838.909 802.613 839.081 802.587  c
839.253 802.561 839.422 802.548 839.589 802.548  c
840.568 802.548 841.344 802.816 841.917 803.353  c
842.490 803.889 842.776 804.610 842.776 805.517  c
842.776 806.465 842.482 807.199 841.894 807.720  c
841.305 808.241 840.479 808.501 839.417 808.501  c
839.042 808.501 838.664 808.470 838.284 808.407  c
837.904 808.345 837.511 808.251 837.104 808.126  c
837.104 806.939 l
837.459 807.126 837.823 807.267 838.198 807.360  c
838.573 807.454 838.969 807.501 839.386 807.501  c
840.063 807.501 840.599 807.324 840.995 806.970  c
841.391 806.616 841.589 806.131 841.589 805.517  c
841.589 804.912 841.391 804.433 840.995 804.079  c
840.599 803.725 840.063 803.548 839.386 803.548  c
839.073 803.548 838.758 803.582 838.440 803.649  c
838.123 803.717 837.802 803.824 837.479 803.970  c
837.479 799.579 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
832.757 774.376 m
832.382 774.366 832.174 774.173 832.132 773.798  c
832.132 773.694 832.160 773.592 832.218 773.493  c
832.275 773.394 832.356 773.316 832.460 773.259  c
832.564 773.202 832.674 773.173 832.788 773.173  c
832.892 773.173 832.999 773.202 833.108 773.259  c
833.218 773.316 833.299 773.394 833.351 773.493  c
833.403 773.592 833.429 773.694 833.429 773.798  c
833.418 774.048 833.299 774.220 833.069 774.314  c
834.476 777.267 l
834.163 773.157 l
833.840 773.157 833.642 772.975 833.569 772.610  c
833.569 772.506 833.598 772.405 833.655 772.306  c
833.713 772.207 833.793 772.131 833.897 772.079  c
834.002 772.027 834.116 772.001 834.241 772.001  c
834.345 772.001 834.450 772.027 834.554 772.079  c
834.658 772.131 834.739 772.207 834.796 772.306  c
834.853 772.405 834.882 772.506 834.882 772.610  c
834.871 772.787 834.778 772.944 834.601 773.079  c
835.710 777.454 l
835.960 772.657 l
835.700 772.543 835.564 772.392 835.554 772.204  c
835.554 772.090 835.582 771.983 835.640 771.884  c
835.697 771.785 835.778 771.709 835.882 771.657  c
835.986 771.605 836.090 771.579 836.194 771.579  c
836.309 771.579 836.418 771.605 836.522 771.657  c
836.627 771.709 836.707 771.785 836.765 771.884  c
836.822 771.983 836.851 772.090 836.851 772.204  c
836.840 772.412 836.705 772.564 836.444 772.657  c
836.663 777.470 l
837.757 773.142 l
837.580 772.954 837.491 772.777 837.491 772.610  c
837.491 772.506 837.517 772.405 837.569 772.306  c
837.621 772.207 837.702 772.131 837.812 772.079  c
837.921 772.027 838.028 772.001 838.132 772.001  c
838.246 772.001 838.356 772.027 838.460 772.079  c
838.564 772.131 838.645 772.207 838.702 772.306  c
838.759 772.405 838.788 772.506 838.788 772.610  c
838.746 772.944 838.559 773.142 838.226 773.204  c
837.679 777.267 l
839.194 774.251 l
839.028 774.126 838.944 773.975 838.944 773.798  c
838.944 773.694 838.970 773.592 839.022 773.493  c
839.075 773.394 839.153 773.319 839.257 773.267  c
839.361 773.215 839.470 773.189 839.585 773.189  c
839.700 773.189 839.809 773.215 839.913 773.267  c
840.017 773.319 840.098 773.394 840.155 773.493  c
840.213 773.592 840.241 773.694 840.241 773.798  c
840.189 774.173 839.970 774.360 839.585 774.360  c
838.647 777.064 l
838.647 780.345 l
833.601 780.345 l
833.601 777.064 l
832.757 774.376 l
h
838.304 778.251 m
838.304 777.798 l
834.054 777.798 l
834.054 778.251 l
838.304 778.251 l
h
838.304 780.001 m
838.304 779.548 l
834.054 779.548 l
834.054 780.001 l
838.304 780.001 l
h
843.858 779.345 m
847.999 779.345 l
847.999 780.345 l
842.437 780.345 l
842.437 779.345 l
842.884 778.886 843.496 778.264 844.272 777.478  c
845.049 776.691 845.535 776.183 845.733 775.954  c
846.119 775.537 846.387 775.181 846.538 774.884  c
846.689 774.587 846.765 774.298 846.765 774.017  c
846.765 773.548 846.601 773.168 846.272 772.876  c
845.944 772.584 845.520 772.439 844.999 772.439  c
844.624 772.439 844.231 772.501 843.819 772.626  c
843.408 772.751 842.968 772.949 842.499 773.220  c
842.499 772.017 l
842.978 771.829 843.424 771.686 843.835 771.587  c
844.246 771.488 844.624 771.439 844.968 771.439  c
845.874 771.439 846.598 771.665 847.140 772.118  c
847.681 772.571 847.952 773.178 847.952 773.939  c
847.952 774.293 847.884 774.631 847.749 774.954  c
847.614 775.277 847.369 775.657 847.015 776.095  c
846.910 776.209 846.598 776.537 846.077 777.079  c
845.556 777.621 844.817 778.376 843.858 779.345  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
855.000 804.175 m
855.000 812.459 848.284 819.175 840.000 819.175  c
831.716 819.175 825.000 812.459 825.000 804.175  c
825.000 795.891 831.716 789.175 840.000 789.175  c
848.284 789.175 855.000 795.891 855.000 804.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
734.391 815.260 m
733.860 815.260 733.438 815.443 733.126 815.807  c
732.813 816.172 732.657 816.667 732.657 817.292  c
732.657 817.927 732.813 818.427 733.126 818.792  c
733.438 819.156 733.860 819.338 734.391 819.338  c
734.923 819.338 735.342 819.156 735.649 818.792  c
735.956 818.427 736.110 817.927 736.110 817.292  c
736.110 816.667 735.956 816.172 735.649 815.807  c
735.342 815.443 734.923 815.260 734.391 815.260  c
h
736.735 811.542 m
736.735 812.620 l
736.433 812.484 736.131 812.380 735.829 812.307  c
735.527 812.234 735.230 812.198 734.938 812.198  c
734.157 812.198 733.561 812.461 733.149 812.987  c
732.738 813.513 732.501 814.307 732.438 815.370  c
732.667 815.036 732.956 814.779 733.305 814.596  c
733.654 814.414 734.037 814.323 734.454 814.323  c
735.329 814.323 736.022 814.588 736.532 815.120  c
737.042 815.651 737.298 816.375 737.298 817.292  c
737.298 818.198 737.032 818.922 736.501 819.463  c
735.969 820.005 735.266 820.276 734.391 820.276  c
733.371 820.276 732.594 819.888 732.063 819.112  c
731.532 818.336 731.266 817.213 731.266 815.745  c
731.266 814.359 731.594 813.255 732.251 812.432  c
732.907 811.609 733.787 811.198 734.891 811.198  c
735.183 811.198 735.480 811.226 735.782 811.284  c
736.084 811.341 736.402 811.427 736.735 811.542  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
726.997 786.151 m
726.622 786.141 726.413 785.948 726.372 785.573  c
726.372 785.469 726.400 785.367 726.458 785.268  c
726.515 785.169 726.596 785.091 726.700 785.034  c
726.804 784.976 726.913 784.948 727.028 784.948  c
727.132 784.948 727.239 784.976 727.348 785.034  c
727.458 785.091 727.538 785.169 727.591 785.268  c
727.643 785.367 727.669 785.469 727.669 785.573  c
727.658 785.823 727.538 785.995 727.309 786.088  c
728.716 789.042 l
728.403 784.932 l
728.080 784.932 727.882 784.750 727.809 784.385  c
727.809 784.281 727.838 784.180 727.895 784.081  c
727.953 783.982 728.033 783.906 728.137 783.854  c
728.242 783.802 728.356 783.776 728.481 783.776  c
728.585 783.776 728.690 783.802 728.794 783.854  c
728.898 783.906 728.979 783.982 729.036 784.081  c
729.093 784.180 729.122 784.281 729.122 784.385  c
729.111 784.562 729.018 784.719 728.841 784.854  c
729.950 789.229 l
730.200 784.432 l
729.940 784.318 729.804 784.167 729.794 783.979  c
729.794 783.864 729.822 783.758 729.880 783.659  c
729.937 783.560 730.018 783.484 730.122 783.432  c
730.226 783.380 730.330 783.354 730.434 783.354  c
730.549 783.354 730.658 783.380 730.762 783.432  c
730.867 783.484 730.947 783.560 731.005 783.659  c
731.062 783.758 731.091 783.864 731.091 783.979  c
731.080 784.187 730.945 784.338 730.684 784.432  c
730.903 789.245 l
731.997 784.917 l
731.820 784.729 731.731 784.552 731.731 784.385  c
731.731 784.281 731.757 784.180 731.809 784.081  c
731.861 783.982 731.942 783.906 732.052 783.854  c
732.161 783.802 732.268 783.776 732.372 783.776  c
732.486 783.776 732.596 783.802 732.700 783.854  c
732.804 783.906 732.885 783.982 732.942 784.081  c
732.999 784.180 733.028 784.281 733.028 784.385  c
732.986 784.719 732.799 784.917 732.466 784.979  c
731.919 789.042 l
733.434 786.026 l
733.268 785.901 733.184 785.750 733.184 785.573  c
733.184 785.469 733.210 785.367 733.262 785.268  c
733.315 785.169 733.393 785.094 733.497 785.042  c
733.601 784.989 733.710 784.963 733.825 784.963  c
733.940 784.963 734.049 784.989 734.153 785.042  c
734.257 785.094 734.338 785.169 734.395 785.268  c
734.453 785.367 734.481 785.469 734.481 785.573  c
734.429 785.948 734.210 786.135 733.825 786.135  c
732.887 788.838 l
732.887 792.120 l
727.841 792.120 l
727.841 788.838 l
726.997 786.151 l
h
732.544 790.026 m
732.544 789.573 l
728.294 789.573 l
728.294 790.026 l
732.544 790.026 l
h
732.544 791.776 m
732.544 791.323 l
728.294 791.323 l
728.294 791.776 l
732.544 791.776 l
h
738.098 791.120 m
742.239 791.120 l
742.239 792.120 l
736.677 792.120 l
736.677 791.120 l
737.124 790.661 737.736 790.039 738.512 789.253  c
739.288 788.466 739.775 787.958 739.973 787.729  c
740.359 787.312 740.627 786.956 740.778 786.659  c
740.929 786.362 741.005 786.073 741.005 785.792  c
741.005 785.323 740.841 784.943 740.512 784.651  c
740.184 784.359 739.760 784.213 739.239 784.213  c
738.864 784.213 738.471 784.276 738.059 784.401  c
737.648 784.526 737.208 784.724 736.739 784.995  c
736.739 783.792 l
737.218 783.604 737.663 783.461 738.075 783.362  c
738.486 783.263 738.864 783.213 739.208 783.213  c
740.114 783.213 740.838 783.440 741.380 783.893  c
741.921 784.346 742.192 784.953 742.192 785.713  c
742.192 786.068 742.124 786.406 741.989 786.729  c
741.854 787.052 741.609 787.432 741.255 787.870  c
741.150 787.984 740.838 788.312 740.317 788.854  c
739.796 789.396 739.057 790.151 738.098 791.120  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
749.240 815.950 m
749.240 824.234 742.524 830.950 734.240 830.950  c
725.956 830.950 719.240 824.234 719.240 815.950  c
719.240 807.665 725.956 800.950 734.240 800.950  c
742.524 800.950 749.240 807.665 749.240 815.950  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
795.298 743.610 m
795.860 743.735 796.300 743.988 796.618 744.368  c
796.936 744.748 797.094 745.220 797.094 745.782  c
797.094 746.647 796.798 747.316 796.204 747.790  c
795.610 748.264 794.766 748.501 793.673 748.501  c
793.308 748.501 792.930 748.465 792.540 748.392  c
792.149 748.319 791.751 748.209 791.344 748.064  c
791.344 746.923 l
791.667 747.110 792.024 747.254 792.415 747.353  c
792.805 747.452 793.214 747.501 793.641 747.501  c
794.381 747.501 794.946 747.355 795.337 747.064  c
795.727 746.772 795.923 746.345 795.923 745.782  c
795.923 745.272 795.740 744.871 795.376 744.579  c
795.011 744.287 794.511 744.142 793.876 744.142  c
792.844 744.142 l
792.844 743.173 l
793.923 743.173 l
794.496 743.173 794.938 743.056 795.251 742.821  c
795.563 742.587 795.719 742.251 795.719 741.814  c
795.719 741.366 795.561 741.022 795.243 740.782  c
794.925 740.543 794.469 740.423 793.876 740.423  c
793.542 740.423 793.191 740.457 792.821 740.524  c
792.451 740.592 792.042 740.699 791.594 740.845  c
791.594 739.798 l
792.053 739.673 792.477 739.579 792.868 739.517  c
793.259 739.454 793.626 739.423 793.969 739.423  c
794.876 739.423 795.589 739.626 796.110 740.032  c
796.631 740.439 796.891 740.991 796.891 741.689  c
796.891 742.178 796.753 742.590 796.477 742.923  c
796.201 743.256 795.808 743.485 795.298 743.610  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
786.997 714.376 m
786.622 714.366 786.413 714.173 786.372 713.798  c
786.372 713.694 786.400 713.592 786.458 713.493  c
786.515 713.394 786.596 713.316 786.700 713.259  c
786.804 713.202 786.913 713.173 787.028 713.173  c
787.132 713.173 787.239 713.202 787.348 713.259  c
787.458 713.316 787.538 713.394 787.591 713.493  c
787.643 713.592 787.669 713.694 787.669 713.798  c
787.658 714.048 787.538 714.220 787.309 714.314  c
788.716 717.267 l
788.403 713.157 l
788.080 713.157 787.882 712.975 787.809 712.610  c
787.809 712.506 787.838 712.405 787.895 712.306  c
787.953 712.207 788.033 712.131 788.137 712.079  c
788.242 712.027 788.356 712.001 788.481 712.001  c
788.585 712.001 788.690 712.027 788.794 712.079  c
788.898 712.131 788.979 712.207 789.036 712.306  c
789.093 712.405 789.122 712.506 789.122 712.610  c
789.111 712.787 789.018 712.944 788.841 713.079  c
789.950 717.454 l
790.200 712.657 l
789.940 712.543 789.804 712.392 789.794 712.204  c
789.794 712.090 789.822 711.983 789.880 711.884  c
789.937 711.785 790.018 711.709 790.122 711.657  c
790.226 711.605 790.330 711.579 790.434 711.579  c
790.549 711.579 790.658 711.605 790.762 711.657  c
790.867 711.709 790.947 711.785 791.005 711.884  c
791.062 711.983 791.091 712.090 791.091 712.204  c
791.080 712.412 790.945 712.564 790.684 712.657  c
790.903 717.470 l
791.997 713.142 l
791.820 712.954 791.731 712.777 791.731 712.610  c
791.731 712.506 791.757 712.405 791.809 712.306  c
791.861 712.207 791.942 712.131 792.052 712.079  c
792.161 712.027 792.268 712.001 792.372 712.001  c
792.486 712.001 792.596 712.027 792.700 712.079  c
792.804 712.131 792.885 712.207 792.942 712.306  c
792.999 712.405 793.028 712.506 793.028 712.610  c
792.986 712.944 792.799 713.142 792.466 713.204  c
791.919 717.267 l
793.434 714.251 l
793.268 714.126 793.184 713.975 793.184 713.798  c
793.184 713.694 793.210 713.592 793.262 713.493  c
793.315 713.394 793.393 713.319 793.497 713.267  c
793.601 713.215 793.710 713.189 793.825 713.189  c
793.940 713.189 794.049 713.215 794.153 713.267  c
794.257 713.319 794.338 713.394 794.395 713.493  c
794.453 713.592 794.481 713.694 794.481 713.798  c
794.429 714.173 794.210 714.360 793.825 714.360  c
792.887 717.064 l
792.887 720.345 l
787.841 720.345 l
787.841 717.064 l
786.997 714.376 l
h
792.544 718.251 m
792.544 717.798 l
788.294 717.798 l
788.294 718.251 l
792.544 718.251 l
h
792.544 720.001 m
792.544 719.548 l
788.294 719.548 l
788.294 720.001 l
792.544 720.001 l
h
798.098 719.345 m
802.239 719.345 l
802.239 720.345 l
796.677 720.345 l
796.677 719.345 l
797.124 718.886 797.736 718.264 798.512 717.478  c
799.288 716.691 799.775 716.183 799.973 715.954  c
800.359 715.537 800.627 715.181 800.778 714.884  c
800.929 714.587 801.005 714.298 801.005 714.017  c
801.005 713.548 800.841 713.168 800.512 712.876  c
800.184 712.584 799.760 712.439 799.239 712.439  c
798.864 712.439 798.471 712.501 798.059 712.626  c
797.648 712.751 797.208 712.949 796.739 713.220  c
796.739 712.017 l
797.218 711.829 797.663 711.686 798.075 711.587  c
798.486 711.488 798.864 711.439 799.208 711.439  c
800.114 711.439 800.838 711.665 801.380 712.118  c
801.921 712.571 802.192 713.178 802.192 713.939  c
802.192 714.293 802.124 714.631 801.989 714.954  c
801.854 715.277 801.609 715.657 801.255 716.095  c
801.150 716.209 800.838 716.537 800.317 717.079  c
799.796 717.621 799.057 718.376 798.098 719.345  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
809.240 744.175 m
809.240 752.459 802.524 759.175 794.240 759.175  c
785.956 759.175 779.240 752.459 779.240 744.175  c
779.240 735.891 785.956 729.175 794.240 729.175  c
802.524 729.175 809.240 735.891 809.240 744.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
924.154 740.610 m
921.169 745.282 l
924.154 745.282 l
924.154 740.610 l
h
923.841 739.579 m
925.341 739.579 l
925.341 745.282 l
926.591 745.282 l
926.591 746.267 l
925.341 746.267 l
925.341 748.329 l
924.154 748.329 l
924.154 746.267 l
920.216 746.267 l
920.216 745.126 l
923.841 739.579 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
889.064 742.360 m
888.689 742.350 888.480 742.157 888.439 741.782  c
888.439 741.678 888.467 741.577 888.525 741.478  c
888.582 741.379 888.663 741.301 888.767 741.243  c
888.871 741.186 888.980 741.157 889.095 741.157  c
889.199 741.157 889.306 741.186 889.415 741.243  c
889.525 741.301 889.605 741.379 889.657 741.478  c
889.710 741.577 889.736 741.678 889.736 741.782  c
889.725 742.032 889.605 742.204 889.376 742.298  c
890.782 745.251 l
890.470 741.142 l
890.147 741.142 889.949 740.959 889.876 740.595  c
889.876 740.491 889.905 740.389 889.962 740.290  c
890.019 740.191 890.100 740.116 890.204 740.064  c
890.309 740.011 890.423 739.985 890.548 739.985  c
890.652 739.985 890.756 740.011 890.861 740.064  c
890.965 740.116 891.045 740.191 891.103 740.290  c
891.160 740.389 891.189 740.491 891.189 740.595  c
891.178 740.772 891.085 740.928 890.907 741.064  c
892.017 745.439 l
892.267 740.642 l
892.006 740.527 891.871 740.376 891.861 740.189  c
891.861 740.074 891.889 739.967 891.947 739.868  c
892.004 739.769 892.085 739.694 892.189 739.642  c
892.293 739.590 892.397 739.564 892.501 739.564  c
892.616 739.564 892.725 739.590 892.829 739.642  c
892.934 739.694 893.014 739.769 893.072 739.868  c
893.129 739.967 893.157 740.074 893.157 740.189  c
893.147 740.397 893.012 740.548 892.751 740.642  c
892.970 745.454 l
894.064 741.126 l
893.887 740.939 893.798 740.761 893.798 740.595  c
893.798 740.491 893.824 740.389 893.876 740.290  c
893.928 740.191 894.009 740.116 894.118 740.064  c
894.228 740.011 894.335 739.985 894.439 739.985  c
894.553 739.985 894.663 740.011 894.767 740.064  c
894.871 740.116 894.952 740.191 895.009 740.290  c
895.066 740.389 895.095 740.491 895.095 740.595  c
895.053 740.928 894.866 741.126 894.532 741.189  c
893.986 745.251 l
895.501 742.235 l
895.335 742.110 895.251 741.959 895.251 741.782  c
895.251 741.678 895.277 741.577 895.329 741.478  c
895.381 741.379 895.460 741.303 895.564 741.251  c
895.668 741.199 895.777 741.173 895.892 741.173  c
896.006 741.173 896.116 741.199 896.220 741.251  c
896.324 741.303 896.405 741.379 896.462 741.478  c
896.519 741.577 896.548 741.678 896.548 741.782  c
896.496 742.157 896.277 742.345 895.892 742.345  c
894.954 745.048 l
894.954 748.329 l
889.907 748.329 l
889.907 745.048 l
889.064 742.360 l
h
894.611 746.235 m
894.611 745.782 l
890.361 745.782 l
890.361 746.235 l
894.611 746.235 l
h
894.611 747.985 m
894.611 747.532 l
890.361 747.532 l
890.361 747.985 l
894.611 747.985 l
h
902.400 740.610 m
899.415 745.282 l
902.400 745.282 l
902.400 740.610 l
h
902.087 739.579 m
903.587 739.579 l
903.587 745.282 l
904.837 745.282 l
904.837 746.267 l
903.587 746.267 l
903.587 748.329 l
902.400 748.329 l
902.400 746.267 l
898.462 746.267 l
898.462 745.126 l
902.087 739.579 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
938.440 744.175 m
938.440 752.459 931.724 759.175 923.440 759.175  c
915.156 759.175 908.440 752.459 908.440 744.175  c
908.440 735.891 915.156 729.175 923.440 729.175  c
931.724 729.175 938.440 735.891 938.440 744.175  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
920.607 817.179 m
926.232 817.179 l
926.232 817.679 l
923.060 825.929 l
921.826 825.929 l
924.810 818.179 l
920.607 818.179 l
920.607 817.179 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
931.197 796.723 m
930.822 796.713 930.614 796.520 930.572 796.145  c
930.572 796.041 930.600 795.939 930.658 795.840  c
930.715 795.741 930.796 795.663 930.900 795.606  c
931.004 795.548 931.114 795.520 931.228 795.520  c
931.332 795.520 931.439 795.548 931.548 795.606  c
931.658 795.663 931.739 795.741 931.791 795.840  c
931.843 795.939 931.869 796.041 931.869 796.145  c
931.858 796.395 931.739 796.567 931.509 796.660  c
932.916 799.614 l
932.603 795.504 l
932.280 795.504 932.082 795.322 932.009 794.957  c
932.009 794.853 932.038 794.752 932.095 794.653  c
932.153 794.554 932.233 794.478 932.337 794.426  c
932.442 794.374 932.556 794.348 932.681 794.348  c
932.785 794.348 932.890 794.374 932.994 794.426  c
933.098 794.478 933.179 794.554 933.236 794.653  c
933.293 794.752 933.322 794.853 933.322 794.957  c
933.311 795.134 933.218 795.291 933.041 795.426  c
934.150 799.801 l
934.400 795.004 l
934.140 794.890 934.004 794.739 933.994 794.551  c
933.994 794.437 934.022 794.330 934.080 794.231  c
934.137 794.132 934.218 794.056 934.322 794.004  c
934.426 793.952 934.530 793.926 934.634 793.926  c
934.749 793.926 934.858 793.952 934.962 794.004  c
935.067 794.056 935.147 794.132 935.205 794.231  c
935.262 794.330 935.291 794.437 935.291 794.551  c
935.280 794.759 935.145 794.910 934.884 795.004  c
935.103 799.817 l
936.197 795.489 l
936.020 795.301 935.931 795.124 935.931 794.957  c
935.931 794.853 935.957 794.752 936.009 794.653  c
936.061 794.554 936.142 794.478 936.252 794.426  c
936.361 794.374 936.468 794.348 936.572 794.348  c
936.686 794.348 936.796 794.374 936.900 794.426  c
937.004 794.478 937.085 794.554 937.142 794.653  c
937.199 794.752 937.228 794.853 937.228 794.957  c
937.186 795.291 936.999 795.489 936.666 795.551  c
936.119 799.614 l
937.634 796.598 l
937.468 796.473 937.384 796.322 937.384 796.145  c
937.384 796.041 937.410 795.939 937.462 795.840  c
937.515 795.741 937.593 795.666 937.697 795.614  c
937.801 795.562 937.910 795.535 938.025 795.535  c
938.140 795.535 938.249 795.562 938.353 795.614  c
938.457 795.666 938.538 795.741 938.595 795.840  c
938.653 795.939 938.681 796.041 938.681 796.145  c
938.629 796.520 938.410 796.707 938.025 796.707  c
937.087 799.410 l
937.087 802.692 l
932.041 802.692 l
932.041 799.410 l
931.197 796.723 l
h
936.744 800.598 m
936.744 800.145 l
932.494 800.145 l
932.494 800.598 l
936.744 800.598 l
h
936.744 802.348 m
936.744 801.895 l
932.494 801.895 l
932.494 802.348 l
936.744 802.348 l
h
944.877 797.973 m
945.439 798.098 945.879 798.351 946.197 798.731  c
946.515 799.111 946.673 799.582 946.673 800.145  c
946.673 801.009 946.377 801.679 945.783 802.153  c
945.189 802.627 944.345 802.864 943.252 802.864  c
942.887 802.864 942.509 802.827 942.119 802.754  c
941.728 802.681 941.330 802.572 940.923 802.426  c
940.923 801.285 l
941.246 801.473 941.603 801.616 941.994 801.715  c
942.384 801.814 942.793 801.864 943.220 801.864  c
943.960 801.864 944.525 801.718 944.916 801.426  c
945.306 801.134 945.502 800.707 945.502 800.145  c
945.502 799.634 945.319 799.233 944.955 798.942  c
944.590 798.650 944.090 798.504 943.455 798.504  c
942.423 798.504 l
942.423 797.535 l
943.502 797.535 l
944.074 797.535 944.517 797.418 944.830 797.184  c
945.142 796.950 945.298 796.614 945.298 796.176  c
945.298 795.728 945.140 795.384 944.822 795.145  c
944.504 794.905 944.048 794.785 943.455 794.785  c
943.121 794.785 942.770 794.819 942.400 794.887  c
942.030 794.955 941.621 795.062 941.173 795.207  c
941.173 794.160 l
941.632 794.035 942.056 793.942 942.447 793.879  c
942.837 793.817 943.205 793.785 943.548 793.785  c
944.455 793.785 945.168 793.989 945.689 794.395  c
946.210 794.801 946.470 795.353 946.470 796.051  c
946.470 796.541 946.332 796.952 946.056 797.285  c
945.780 797.619 945.387 797.848 944.877 797.973  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
938.440 821.775 m
938.440 830.059 931.724 836.775 923.440 836.775  c
915.156 836.775 908.440 830.059 908.440 821.775  c
908.440 813.491 915.156 806.775 923.440 806.775  c
931.724 806.775 938.440 813.491 938.440 821.775  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
757.099 813.405 m
817.141 806.720 l
S
newpath
749.148 814.290 m
761.627 817.931 l
758.093 813.294 l
760.521 807.993 l
h
f
newpath
825.092 805.835 m
812.613 802.193 l
816.147 806.830 l
813.719 812.132 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
726.060 721.448 m
772.420 736.902 l
S
newpath
718.470 718.918 m
728.273 727.456 l
727.008 721.764 l
731.436 717.970 l
h
f
newpath
780.010 739.431 m
770.207 730.893 l
771.472 736.585 l
767.044 740.380 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
779.489 761.821 m
748.991 798.303 l
S
newpath
784.620 755.683 m
773.087 761.683 l
778.847 762.588 l
780.759 768.097 l
h
f
newpath
743.861 804.441 m
755.393 798.441 l
749.633 797.536 l
747.721 792.028 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
808.188 762.463 m
826.052 785.887 l
S
newpath
803.336 756.102 m
806.638 768.676 l
808.794 763.258 l
814.589 762.611 l
h
f
newpath
830.904 792.248 m
827.602 779.674 l
825.446 785.091 l
819.651 785.738 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
923.440 767.175 m
923.440 798.775 l
S
newpath
923.440 759.175 m
918.440 771.175 l
923.440 768.175 l
928.440 771.175 l
h
f
newpath
923.440 806.775 m
928.440 794.775 l
923.440 797.775 l
918.440 794.775 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
862.505 808.922 m
900.935 817.028 l
S
newpath
854.677 807.271 m
865.387 814.640 l
863.483 809.128 l
867.451 804.855 l
h
f
newpath
908.763 818.679 m
898.053 811.310 l
899.957 816.822 l
895.989 821.095 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
