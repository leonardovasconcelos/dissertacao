%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 291 186
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, March 7, 2016 3:53:12 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
291 186 setpagesize
0 0 0 0 setmargins
0 0 setorigin
291 186 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
291.000 0.00000 l
291.000 186.000 l
0.00000 186.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
291.000 0.00000 l
291.000 186.000 l
0.00000 186.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 291 186 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -450.000 -30.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
450.000 30.0000 m
741.000 30.0000 l
741.000 216.000 l
450.000 216.000 l
450.000 30.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -450.000 -30.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -450.000 -30.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -450.000 -30.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
632.267 63.1543 m
634.204 63.1543 l
634.204 56.4824 l
632.095 56.9043 l
632.095 55.8262 l
634.189 55.4043 l
635.376 55.4043 l
635.376 63.1543 l
637.314 63.1543 l
637.314 64.1543 l
632.267 64.1543 l
632.267 63.1543 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
593.346 58.1855 m
592.971 58.1751 592.763 57.9824 592.721 57.6074  c
592.721 57.5033 592.750 57.4017 592.807 57.3027  c
592.864 57.2038 592.945 57.1257 593.049 57.0684  c
593.153 57.0111 593.263 56.9824 593.377 56.9824  c
593.481 56.9824 593.588 57.0111 593.698 57.0684  c
593.807 57.1257 593.888 57.2038 593.940 57.3027  c
593.992 57.4017 594.018 57.5033 594.018 57.6074  c
594.008 57.8574 593.888 58.0293 593.659 58.1230  c
595.065 61.0762 l
594.752 56.9668 l
594.429 56.9668 594.231 56.7845 594.159 56.4199  c
594.159 56.3158 594.187 56.2142 594.245 56.1152  c
594.302 56.0163 594.383 55.9408 594.487 55.8887  c
594.591 55.8366 594.705 55.8105 594.830 55.8105  c
594.935 55.8105 595.039 55.8366 595.143 55.8887  c
595.247 55.9408 595.328 56.0163 595.385 56.1152  c
595.442 56.2142 595.471 56.3158 595.471 56.4199  c
595.461 56.5970 595.367 56.7533 595.190 56.8887  c
596.299 61.2637 l
596.549 56.4668 l
596.289 56.3522 596.153 56.2012 596.143 56.0137  c
596.143 55.8991 596.172 55.7923 596.229 55.6934  c
596.286 55.5944 596.367 55.5189 596.471 55.4668  c
596.575 55.4147 596.679 55.3887 596.784 55.3887  c
596.898 55.3887 597.008 55.4147 597.112 55.4668  c
597.216 55.5189 597.297 55.5944 597.354 55.6934  c
597.411 55.7923 597.440 55.8991 597.440 56.0137  c
597.429 56.2220 597.294 56.3730 597.034 56.4668  c
597.252 61.2793 l
598.346 56.9512 l
598.169 56.7637 598.080 56.5866 598.080 56.4199  c
598.080 56.3158 598.106 56.2142 598.159 56.1152  c
598.211 56.0163 598.291 55.9408 598.401 55.8887  c
598.510 55.8366 598.617 55.8105 598.721 55.8105  c
598.836 55.8105 598.945 55.8366 599.049 55.8887  c
599.153 55.9408 599.234 56.0163 599.291 56.1152  c
599.349 56.2142 599.377 56.3158 599.377 56.4199  c
599.336 56.7533 599.148 56.9512 598.815 57.0137  c
598.268 61.0762 l
599.784 58.0605 l
599.617 57.9355 599.534 57.7845 599.534 57.6074  c
599.534 57.5033 599.560 57.4017 599.612 57.3027  c
599.664 57.2038 599.742 57.1283 599.846 57.0762  c
599.950 57.0241 600.060 56.9980 600.174 56.9980  c
600.289 56.9980 600.398 57.0241 600.502 57.0762  c
600.606 57.1283 600.687 57.2038 600.745 57.3027  c
600.802 57.4017 600.830 57.5033 600.830 57.6074  c
600.778 57.9824 600.560 58.1699 600.174 58.1699  c
599.237 60.8730 l
599.237 64.1543 l
594.190 64.1543 l
594.190 60.8730 l
593.346 58.1855 l
h
598.893 62.0605 m
598.893 61.6074 l
594.643 61.6074 l
594.643 62.0605 l
598.893 62.0605 l
h
598.893 63.8105 m
598.893 63.3574 l
594.643 63.3574 l
594.643 63.8105 l
598.893 63.8105 l
h
607.450 63.1543 m
609.387 63.1543 l
609.387 56.4824 l
607.278 56.9043 l
607.278 55.8262 l
609.371 55.4043 l
610.559 55.4043 l
610.559 63.1543 l
612.496 63.1543 l
612.496 64.1543 l
607.450 64.1543 l
607.450 63.1543 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
649.600 60.0000 m
649.600 68.2843 642.884 75.0000 634.600 75.0000  c
626.316 75.0000 619.600 68.2843 619.600 60.0000  c
619.600 51.7157 626.316 45.0000 634.600 45.0000  c
642.884 45.0000 649.600 51.7157 649.600 60.0000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
696.367 181.229 m
701.992 181.229 l
701.992 181.729 l
698.820 189.979 l
697.586 189.979 l
700.570 182.229 l
696.367 182.229 l
696.367 181.229 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
706.957 160.773 m
706.582 160.763 706.374 160.570 706.332 160.195  c
706.332 160.091 706.360 159.989 706.418 159.890  c
706.475 159.791 706.556 159.713 706.660 159.656  c
706.764 159.599 706.874 159.570 706.988 159.570  c
707.092 159.570 707.199 159.599 707.308 159.656  c
707.418 159.713 707.499 159.791 707.551 159.890  c
707.603 159.989 707.629 160.091 707.629 160.195  c
707.618 160.445 707.499 160.617 707.269 160.711  c
708.676 163.664 l
708.363 159.554 l
708.040 159.554 707.842 159.372 707.769 159.008  c
707.769 158.903 707.798 158.802 707.855 158.703  c
707.913 158.604 707.993 158.528 708.097 158.476  c
708.202 158.424 708.316 158.398 708.441 158.398  c
708.545 158.398 708.650 158.424 708.754 158.476  c
708.858 158.528 708.939 158.604 708.996 158.703  c
709.053 158.802 709.082 158.903 709.082 159.008  c
709.071 159.185 708.978 159.341 708.801 159.476  c
709.910 163.851 l
710.160 159.054 l
709.900 158.940 709.764 158.789 709.754 158.601  c
709.754 158.487 709.782 158.380 709.840 158.281  c
709.897 158.182 709.978 158.107 710.082 158.054  c
710.186 158.002 710.290 157.976 710.394 157.976  c
710.509 157.976 710.618 158.002 710.722 158.054  c
710.827 158.107 710.907 158.182 710.965 158.281  c
711.022 158.380 711.051 158.487 711.051 158.601  c
711.040 158.810 710.905 158.961 710.644 159.054  c
710.863 163.867 l
711.957 159.539 l
711.780 159.351 711.691 159.174 711.691 159.008  c
711.691 158.903 711.717 158.802 711.769 158.703  c
711.821 158.604 711.902 158.528 712.012 158.476  c
712.121 158.424 712.228 158.398 712.332 158.398  c
712.446 158.398 712.556 158.424 712.660 158.476  c
712.764 158.528 712.845 158.604 712.902 158.703  c
712.959 158.802 712.988 158.903 712.988 159.008  c
712.946 159.341 712.759 159.539 712.426 159.601  c
711.879 163.664 l
713.394 160.648 l
713.228 160.523 713.144 160.372 713.144 160.195  c
713.144 160.091 713.170 159.989 713.222 159.890  c
713.275 159.791 713.353 159.716 713.457 159.664  c
713.561 159.612 713.670 159.586 713.785 159.586  c
713.900 159.586 714.009 159.612 714.113 159.664  c
714.217 159.716 714.298 159.791 714.355 159.890  c
714.413 159.989 714.441 160.091 714.441 160.195  c
714.389 160.570 714.170 160.758 713.785 160.758  c
712.847 163.461 l
712.847 166.742 l
707.801 166.742 l
707.801 163.461 l
706.957 160.773 l
h
712.504 164.648 m
712.504 164.195 l
708.254 164.195 l
708.254 164.648 l
712.504 164.648 l
h
712.504 166.398 m
712.504 165.945 l
708.254 165.945 l
708.254 166.398 l
712.504 166.398 l
h
717.246 165.742 m
719.183 165.742 l
719.183 159.070 l
717.074 159.492 l
717.074 158.414 l
719.168 157.992 l
720.355 157.992 l
720.355 165.742 l
722.293 165.742 l
722.293 166.742 l
717.246 166.742 l
717.246 165.742 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
714.200 185.825 m
714.200 194.109 707.484 200.825 699.200 200.825  c
690.916 200.825 684.200 194.109 684.200 185.825  c
684.200 177.541 690.916 170.825 699.200 170.825  c
707.484 170.825 714.200 177.541 714.200 185.825  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
699.914 104.661 m
696.930 109.333 l
699.914 109.333 l
699.914 104.661 l
h
699.601 103.629 m
701.101 103.629 l
701.101 109.333 l
702.351 109.333 l
702.351 110.317 l
701.101 110.317 l
701.101 112.379 l
699.914 112.379 l
699.914 110.317 l
695.976 110.317 l
695.976 109.176 l
699.601 103.629 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
664.824 106.411 m
664.449 106.400 664.240 106.208 664.199 105.833  c
664.199 105.728 664.227 105.627 664.285 105.528  c
664.342 105.429 664.423 105.351 664.527 105.293  c
664.631 105.236 664.740 105.208 664.855 105.208  c
664.959 105.208 665.066 105.236 665.175 105.293  c
665.285 105.351 665.365 105.429 665.417 105.528  c
665.470 105.627 665.496 105.728 665.496 105.833  c
665.485 106.083 665.365 106.254 665.136 106.348  c
666.542 109.301 l
666.230 105.192 l
665.907 105.192 665.709 105.010 665.636 104.645  c
665.636 104.541 665.665 104.439 665.722 104.340  c
665.779 104.241 665.860 104.166 665.964 104.114  c
666.069 104.062 666.183 104.036 666.308 104.036  c
666.412 104.036 666.516 104.062 666.621 104.114  c
666.725 104.166 666.806 104.241 666.863 104.340  c
666.920 104.439 666.949 104.541 666.949 104.645  c
666.938 104.822 666.845 104.978 666.667 105.114  c
667.777 109.489 l
668.027 104.692 l
667.766 104.577 667.631 104.426 667.621 104.239  c
667.621 104.124 667.649 104.017 667.707 103.918  c
667.764 103.820 667.845 103.744 667.949 103.692  c
668.053 103.640 668.157 103.614 668.261 103.614  c
668.376 103.614 668.485 103.640 668.589 103.692  c
668.694 103.744 668.774 103.820 668.832 103.918  c
668.889 104.017 668.917 104.124 668.917 104.239  c
668.907 104.447 668.772 104.598 668.511 104.692  c
668.730 109.504 l
669.824 105.176 l
669.647 104.989 669.558 104.812 669.558 104.645  c
669.558 104.541 669.584 104.439 669.636 104.340  c
669.688 104.241 669.769 104.166 669.878 104.114  c
669.988 104.062 670.095 104.036 670.199 104.036  c
670.313 104.036 670.423 104.062 670.527 104.114  c
670.631 104.166 670.712 104.241 670.769 104.340  c
670.826 104.439 670.855 104.541 670.855 104.645  c
670.813 104.978 670.626 105.176 670.292 105.239  c
669.746 109.301 l
671.261 106.286 l
671.095 106.161 671.011 106.010 671.011 105.833  c
671.011 105.728 671.037 105.627 671.089 105.528  c
671.141 105.429 671.220 105.353 671.324 105.301  c
671.428 105.249 671.537 105.223 671.652 105.223  c
671.766 105.223 671.876 105.249 671.980 105.301  c
672.084 105.353 672.165 105.429 672.222 105.528  c
672.279 105.627 672.308 105.728 672.308 105.833  c
672.256 106.208 672.037 106.395 671.652 106.395  c
670.714 109.098 l
670.714 112.379 l
665.667 112.379 l
665.667 109.098 l
664.824 106.411 l
h
670.371 110.286 m
670.371 109.833 l
666.121 109.833 l
666.121 110.286 l
670.371 110.286 l
h
670.371 112.036 m
670.371 111.583 l
666.121 111.583 l
666.121 112.036 l
670.371 112.036 l
h
675.113 111.379 m
677.050 111.379 l
677.050 104.708 l
674.941 105.129 l
674.941 104.051 l
677.035 103.629 l
678.222 103.629 l
678.222 111.379 l
680.160 111.379 l
680.160 112.379 l
675.113 112.379 l
675.113 111.379 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
714.200 108.225 m
714.200 116.509 707.484 123.225 699.200 123.225  c
690.916 123.225 684.200 116.509 684.200 108.225  c
684.200 99.9409 690.916 93.2251 699.200 93.2251  c
707.484 93.2251 714.200 99.9409 714.200 108.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
571.058 107.661 m
571.620 107.786 572.060 108.038 572.378 108.418  c
572.696 108.799 572.854 109.270 572.854 109.833  c
572.854 110.697 572.558 111.366 571.964 111.840  c
571.370 112.314 570.526 112.551 569.433 112.551  c
569.068 112.551 568.690 112.515 568.300 112.442  c
567.909 112.369 567.511 112.260 567.104 112.114  c
567.104 110.973 l
567.427 111.161 567.784 111.304 568.175 111.403  c
568.565 111.502 568.974 111.551 569.401 111.551  c
570.141 111.551 570.706 111.405 571.097 111.114  c
571.487 110.822 571.683 110.395 571.683 109.833  c
571.683 109.322 571.500 108.921 571.136 108.629  c
570.771 108.338 570.271 108.192 569.636 108.192  c
568.604 108.192 l
568.604 107.223 l
569.683 107.223 l
570.256 107.223 570.698 107.106 571.011 106.872  c
571.323 106.637 571.479 106.301 571.479 105.864  c
571.479 105.416 571.321 105.072 571.003 104.833  c
570.685 104.593 570.229 104.473 569.636 104.473  c
569.302 104.473 568.951 104.507 568.581 104.575  c
568.211 104.642 567.802 104.749 567.354 104.895  c
567.354 103.848 l
567.813 103.723 568.237 103.629 568.628 103.567  c
569.019 103.504 569.386 103.473 569.729 103.473  c
570.636 103.473 571.349 103.676 571.870 104.083  c
572.391 104.489 572.651 105.041 572.651 105.739  c
572.651 106.228 572.513 106.640 572.237 106.973  c
571.961 107.307 571.568 107.536 571.058 107.661  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
562.757 78.4263 m
562.382 78.4159 562.174 78.2232 562.132 77.8482  c
562.132 77.7440 562.160 77.6424 562.218 77.5435  c
562.275 77.4445 562.356 77.3664 562.460 77.3091  c
562.564 77.2518 562.674 77.2232 562.788 77.2232  c
562.892 77.2232 562.999 77.2518 563.108 77.3091  c
563.218 77.3664 563.299 77.4445 563.351 77.5435  c
563.403 77.6424 563.429 77.7440 563.429 77.8482  c
563.418 78.0982 563.299 78.2701 563.069 78.3638  c
564.476 81.3169 l
564.163 77.2076 l
563.840 77.2076 563.642 77.0253 563.569 76.6607  c
563.569 76.5565 563.598 76.4549 563.655 76.3560  c
563.713 76.2570 563.793 76.1815 563.897 76.1294  c
564.002 76.0773 564.116 76.0513 564.241 76.0513  c
564.345 76.0513 564.450 76.0773 564.554 76.1294  c
564.658 76.1815 564.739 76.2570 564.796 76.3560  c
564.853 76.4549 564.882 76.5565 564.882 76.6607  c
564.871 76.8378 564.778 76.9940 564.601 77.1294  c
565.710 81.5044 l
565.960 76.7076 l
565.700 76.5930 565.564 76.4419 565.554 76.2544  c
565.554 76.1398 565.582 76.0331 565.640 75.9341  c
565.697 75.8352 565.778 75.7596 565.882 75.7076  c
565.986 75.6555 566.090 75.6294 566.194 75.6294  c
566.309 75.6294 566.418 75.6555 566.522 75.7076  c
566.627 75.7596 566.707 75.8352 566.765 75.9341  c
566.822 76.0331 566.851 76.1398 566.851 76.2544  c
566.840 76.4628 566.705 76.6138 566.444 76.7076  c
566.663 81.5201 l
567.757 77.1919 l
567.580 77.0044 567.491 76.8273 567.491 76.6607  c
567.491 76.5565 567.517 76.4549 567.569 76.3560  c
567.621 76.2570 567.702 76.1815 567.812 76.1294  c
567.921 76.0773 568.028 76.0513 568.132 76.0513  c
568.246 76.0513 568.356 76.0773 568.460 76.1294  c
568.564 76.1815 568.645 76.2570 568.702 76.3560  c
568.759 76.4549 568.788 76.5565 568.788 76.6607  c
568.746 76.9940 568.559 77.1919 568.226 77.2544  c
567.679 81.3169 l
569.194 78.3013 l
569.028 78.1763 568.944 78.0253 568.944 77.8482  c
568.944 77.7440 568.970 77.6424 569.022 77.5435  c
569.075 77.4445 569.153 77.3690 569.257 77.3169  c
569.361 77.2648 569.470 77.2388 569.585 77.2388  c
569.700 77.2388 569.809 77.2648 569.913 77.3169  c
570.017 77.3690 570.098 77.4445 570.155 77.5435  c
570.213 77.6424 570.241 77.7440 570.241 77.8482  c
570.189 78.2232 569.970 78.4107 569.585 78.4107  c
568.647 81.1138 l
568.647 84.3951 l
563.601 84.3951 l
563.601 81.1138 l
562.757 78.4263 l
h
568.304 82.3013 m
568.304 81.8482 l
564.054 81.8482 l
564.054 82.3013 l
568.304 82.3013 l
h
568.304 84.0513 m
568.304 83.5982 l
564.054 83.5982 l
564.054 84.0513 l
568.304 84.0513 l
h
573.046 83.3951 m
574.983 83.3951 l
574.983 76.7232 l
572.874 77.1451 l
572.874 76.0669 l
574.968 75.6451 l
576.155 75.6451 l
576.155 83.3951 l
578.093 83.3951 l
578.093 84.3951 l
573.046 84.3951 l
573.046 83.3951 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
585.000 108.225 m
585.000 116.509 578.284 123.225 570.000 123.225  c
561.716 123.225 555.000 116.509 555.000 108.225  c
555.000 99.9409 561.716 93.2251 570.000 93.2251  c
578.284 93.2251 585.000 99.9409 585.000 108.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
510.151 179.311 m
509.620 179.311 509.198 179.493 508.886 179.857  c
508.573 180.222 508.417 180.717 508.417 181.342  c
508.417 181.977 508.573 182.477 508.886 182.842  c
509.198 183.206 509.620 183.389 510.151 183.389  c
510.683 183.389 511.102 183.206 511.409 182.842  c
511.716 182.477 511.870 181.977 511.870 181.342  c
511.870 180.717 511.716 180.222 511.409 179.857  c
511.102 179.493 510.683 179.311 510.151 179.311  c
h
512.495 175.592 m
512.495 176.670 l
512.193 176.535 511.891 176.430 511.589 176.357  c
511.287 176.285 510.990 176.248 510.698 176.248  c
509.917 176.248 509.321 176.511 508.909 177.037  c
508.498 177.563 508.261 178.357 508.198 179.420  c
508.427 179.087 508.716 178.829 509.065 178.646  c
509.414 178.464 509.797 178.373 510.214 178.373  c
511.089 178.373 511.782 178.639 512.292 179.170  c
512.802 179.701 513.058 180.425 513.058 181.342  c
513.058 182.248 512.792 182.972 512.261 183.514  c
511.729 184.055 511.026 184.326 510.151 184.326  c
509.131 184.326 508.354 183.938 507.823 183.162  c
507.292 182.386 507.026 181.264 507.026 179.795  c
507.026 178.410 507.354 177.305 508.011 176.482  c
508.667 175.660 509.547 175.248 510.651 175.248  c
510.943 175.248 511.240 175.277 511.542 175.334  c
511.844 175.391 512.162 175.477 512.495 175.592  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
502.757 150.201 m
502.382 150.191 502.174 149.998 502.132 149.623  c
502.132 149.519 502.160 149.417 502.218 149.318  c
502.275 149.219 502.356 149.141 502.460 149.084  c
502.564 149.027 502.674 148.998 502.788 148.998  c
502.892 148.998 502.999 149.027 503.108 149.084  c
503.218 149.141 503.299 149.219 503.351 149.318  c
503.403 149.417 503.429 149.519 503.429 149.623  c
503.418 149.873 503.299 150.045 503.069 150.139  c
504.476 153.092 l
504.163 148.982 l
503.840 148.982 503.642 148.800 503.569 148.436  c
503.569 148.331 503.598 148.230 503.655 148.131  c
503.713 148.032 503.793 147.956 503.897 147.904  c
504.002 147.852 504.116 147.826 504.241 147.826  c
504.345 147.826 504.450 147.852 504.554 147.904  c
504.658 147.956 504.739 148.032 504.796 148.131  c
504.853 148.230 504.882 148.331 504.882 148.436  c
504.871 148.613 504.778 148.769 504.601 148.904  c
505.710 153.279 l
505.960 148.482 l
505.700 148.368 505.564 148.217 505.554 148.029  c
505.554 147.915 505.582 147.808 505.640 147.709  c
505.697 147.610 505.778 147.535 505.882 147.482  c
505.986 147.430 506.090 147.404 506.194 147.404  c
506.309 147.404 506.418 147.430 506.522 147.482  c
506.627 147.535 506.707 147.610 506.765 147.709  c
506.822 147.808 506.851 147.915 506.851 148.029  c
506.840 148.238 506.705 148.389 506.444 148.482  c
506.663 153.295 l
507.757 148.967 l
507.580 148.779 507.491 148.602 507.491 148.436  c
507.491 148.331 507.517 148.230 507.569 148.131  c
507.621 148.032 507.702 147.956 507.812 147.904  c
507.921 147.852 508.028 147.826 508.132 147.826  c
508.246 147.826 508.356 147.852 508.460 147.904  c
508.564 147.956 508.645 148.032 508.702 148.131  c
508.759 148.230 508.788 148.331 508.788 148.436  c
508.746 148.769 508.559 148.967 508.226 149.029  c
507.679 153.092 l
509.194 150.076 l
509.028 149.951 508.944 149.800 508.944 149.623  c
508.944 149.519 508.970 149.417 509.022 149.318  c
509.075 149.219 509.153 149.144 509.257 149.092  c
509.361 149.040 509.470 149.014 509.585 149.014  c
509.700 149.014 509.809 149.040 509.913 149.092  c
510.017 149.144 510.098 149.219 510.155 149.318  c
510.213 149.417 510.241 149.519 510.241 149.623  c
510.189 149.998 509.970 150.186 509.585 150.186  c
508.647 152.889 l
508.647 156.170 l
503.601 156.170 l
503.601 152.889 l
502.757 150.201 l
h
508.304 154.076 m
508.304 153.623 l
504.054 153.623 l
504.054 154.076 l
508.304 154.076 l
h
508.304 155.826 m
508.304 155.373 l
504.054 155.373 l
504.054 155.826 l
508.304 155.826 l
h
513.046 155.170 m
514.983 155.170 l
514.983 148.498 l
512.874 148.920 l
512.874 147.842 l
514.968 147.420 l
516.155 147.420 l
516.155 155.170 l
518.093 155.170 l
518.093 156.170 l
513.046 156.170 l
513.046 155.170 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
525.000 180.000 m
525.000 188.284 518.284 195.000 510.000 195.000  c
501.716 195.000 495.000 188.284 495.000 180.000  c
495.000 171.716 501.716 165.000 510.000 165.000  c
518.284 165.000 525.000 171.716 525.000 180.000  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
613.240 163.629 m
617.880 163.629 l
617.880 164.629 l
614.318 164.629 l
614.318 166.770 l
614.495 166.708 614.669 166.663 614.841 166.637  c
615.013 166.611 615.182 166.598 615.349 166.598  c
616.328 166.598 617.104 166.866 617.677 167.403  c
618.250 167.939 618.536 168.661 618.536 169.567  c
618.536 170.515 618.242 171.249 617.654 171.770  c
617.065 172.291 616.240 172.551 615.177 172.551  c
614.802 172.551 614.424 172.520 614.044 172.458  c
613.664 172.395 613.271 172.301 612.865 172.176  c
612.865 170.989 l
613.219 171.176 613.583 171.317 613.958 171.411  c
614.333 171.504 614.729 171.551 615.146 171.551  c
615.823 171.551 616.359 171.374 616.755 171.020  c
617.151 170.666 617.349 170.182 617.349 169.567  c
617.349 168.963 617.151 168.484 616.755 168.129  c
616.359 167.775 615.823 167.598 615.146 167.598  c
614.833 167.598 614.518 167.632 614.200 167.700  c
613.883 167.767 613.562 167.874 613.240 168.020  c
613.240 163.629 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
608.517 138.426 m
608.142 138.416 607.934 138.223 607.892 137.848  c
607.892 137.744 607.920 137.642 607.978 137.543  c
608.035 137.445 608.116 137.366 608.220 137.309  c
608.324 137.252 608.434 137.223 608.548 137.223  c
608.652 137.223 608.759 137.252 608.868 137.309  c
608.978 137.366 609.059 137.445 609.111 137.543  c
609.163 137.642 609.189 137.744 609.189 137.848  c
609.178 138.098 609.059 138.270 608.829 138.364  c
610.236 141.317 l
609.923 137.208 l
609.600 137.208 609.402 137.025 609.329 136.661  c
609.329 136.557 609.358 136.455 609.415 136.356  c
609.473 136.257 609.553 136.182 609.657 136.129  c
609.762 136.077 609.876 136.051 610.001 136.051  c
610.105 136.051 610.210 136.077 610.314 136.129  c
610.418 136.182 610.499 136.257 610.556 136.356  c
610.613 136.455 610.642 136.557 610.642 136.661  c
610.631 136.838 610.538 136.994 610.361 137.129  c
611.470 141.504 l
611.720 136.708 l
611.460 136.593 611.324 136.442 611.314 136.254  c
611.314 136.140 611.342 136.033 611.400 135.934  c
611.457 135.835 611.538 135.760 611.642 135.708  c
611.746 135.655 611.850 135.629 611.954 135.629  c
612.069 135.629 612.178 135.655 612.282 135.708  c
612.387 135.760 612.467 135.835 612.525 135.934  c
612.582 136.033 612.611 136.140 612.611 136.254  c
612.600 136.463 612.465 136.614 612.204 136.708  c
612.423 141.520 l
613.517 137.192 l
613.340 137.004 613.251 136.827 613.251 136.661  c
613.251 136.557 613.277 136.455 613.329 136.356  c
613.381 136.257 613.462 136.182 613.572 136.129  c
613.681 136.077 613.788 136.051 613.892 136.051  c
614.006 136.051 614.116 136.077 614.220 136.129  c
614.324 136.182 614.405 136.257 614.462 136.356  c
614.519 136.455 614.548 136.557 614.548 136.661  c
614.506 136.994 614.319 137.192 613.986 137.254  c
613.439 141.317 l
614.954 138.301 l
614.788 138.176 614.704 138.025 614.704 137.848  c
614.704 137.744 614.730 137.642 614.782 137.543  c
614.835 137.445 614.913 137.369 615.017 137.317  c
615.121 137.265 615.230 137.239 615.345 137.239  c
615.460 137.239 615.569 137.265 615.673 137.317  c
615.777 137.369 615.858 137.445 615.915 137.543  c
615.973 137.642 616.001 137.744 616.001 137.848  c
615.949 138.223 615.730 138.411 615.345 138.411  c
614.407 141.114 l
614.407 144.395 l
609.361 144.395 l
609.361 141.114 l
608.517 138.426 l
h
614.064 142.301 m
614.064 141.848 l
609.814 141.848 l
609.814 142.301 l
614.064 142.301 l
h
614.064 144.051 m
614.064 143.598 l
609.814 143.598 l
609.814 144.051 l
614.064 144.051 l
h
618.806 143.395 m
620.743 143.395 l
620.743 136.723 l
618.634 137.145 l
618.634 136.067 l
620.728 135.645 l
621.915 135.645 l
621.915 143.395 l
623.853 143.395 l
623.853 144.395 l
618.806 144.395 l
618.806 143.395 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
630.760 168.225 m
630.760 176.509 624.044 183.225 615.760 183.225  c
607.476 183.225 600.760 176.509 600.760 168.225  c
600.760 159.941 607.476 153.225 615.760 153.225  c
624.044 153.225 630.760 159.941 630.760 168.225  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
478.479 81.3794 m
482.620 81.3794 l
482.620 82.3794 l
477.058 82.3794 l
477.058 81.3794 l
477.506 80.9211 478.118 80.2987 478.894 79.5122  c
479.670 78.7258 480.157 78.2180 480.354 77.9888  c
480.740 77.5721 481.008 77.2154 481.159 76.9185  c
481.310 76.6216 481.386 76.3326 481.386 76.0513  c
481.386 75.5826 481.222 75.2023 480.894 74.9107  c
480.565 74.6190 480.141 74.4732 479.620 74.4732  c
479.245 74.4732 478.852 74.5357 478.440 74.6607  c
478.029 74.7857 477.589 74.9836 477.120 75.2544  c
477.120 74.0513 l
477.599 73.8638 478.045 73.7206 478.456 73.6216  c
478.868 73.5227 479.245 73.4732 479.589 73.4732  c
480.495 73.4732 481.219 73.6997 481.761 74.1529  c
482.302 74.6060 482.573 75.2128 482.573 75.9732  c
482.573 76.3273 482.506 76.6659 482.370 76.9888  c
482.235 77.3117 481.990 77.6919 481.636 78.1294  c
481.532 78.2440 481.219 78.5721 480.698 79.1138  c
480.177 79.6555 479.438 80.4107 478.479 81.3794  c
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
497.707 74.3951 m
497.332 74.3846 497.124 74.1919 497.082 73.8169  c
497.082 73.7128 497.111 73.6112 497.168 73.5122  c
497.225 73.4133 497.306 73.3352 497.410 73.2779  c
497.514 73.2206 497.624 73.1919 497.738 73.1919  c
497.842 73.1919 497.949 73.2206 498.058 73.2779  c
498.168 73.3352 498.249 73.4133 498.301 73.5122  c
498.353 73.6112 498.379 73.7128 498.379 73.8169  c
498.368 74.0669 498.249 74.2388 498.019 74.3326  c
499.426 77.2857 l
499.113 73.1763 l
498.790 73.1763 498.592 72.9940 498.519 72.6294  c
498.519 72.5253 498.548 72.4237 498.605 72.3247  c
498.663 72.2258 498.743 72.1503 498.848 72.0982  c
498.952 72.0461 499.066 72.0201 499.191 72.0201  c
499.295 72.0201 499.400 72.0461 499.504 72.0982  c
499.608 72.1503 499.689 72.2258 499.746 72.3247  c
499.803 72.4237 499.832 72.5253 499.832 72.6294  c
499.821 72.8065 499.728 72.9628 499.551 73.0982  c
500.660 77.4732 l
500.910 72.6763 l
500.650 72.5617 500.514 72.4107 500.504 72.2232  c
500.504 72.1086 500.532 72.0018 500.590 71.9029  c
500.647 71.8039 500.728 71.7284 500.832 71.6763  c
500.936 71.6242 501.040 71.5982 501.144 71.5982  c
501.259 71.5982 501.368 71.6242 501.473 71.6763  c
501.577 71.7284 501.657 71.8039 501.715 71.9029  c
501.772 72.0018 501.801 72.1086 501.801 72.2232  c
501.790 72.4315 501.655 72.5826 501.394 72.6763  c
501.613 77.4888 l
502.707 73.1607 l
502.530 72.9732 502.441 72.7961 502.441 72.6294  c
502.441 72.5253 502.467 72.4237 502.519 72.3247  c
502.571 72.2258 502.652 72.1503 502.762 72.0982  c
502.871 72.0461 502.978 72.0201 503.082 72.0201  c
503.196 72.0201 503.306 72.0461 503.410 72.0982  c
503.514 72.1503 503.595 72.2258 503.652 72.3247  c
503.710 72.4237 503.738 72.5253 503.738 72.6294  c
503.696 72.9628 503.509 73.1607 503.176 73.2232  c
502.629 77.2857 l
504.144 74.2701 l
503.978 74.1451 503.894 73.9940 503.894 73.8169  c
503.894 73.7128 503.920 73.6112 503.973 73.5122  c
504.025 73.4133 504.103 73.3378 504.207 73.2857  c
504.311 73.2336 504.420 73.2076 504.535 73.2076  c
504.650 73.2076 504.759 73.2336 504.863 73.2857  c
504.967 73.3378 505.048 73.4133 505.105 73.5122  c
505.163 73.6112 505.191 73.7128 505.191 73.8169  c
505.139 74.1919 504.920 74.3794 504.535 74.3794  c
503.598 77.0826 l
503.598 80.3638 l
498.551 80.3638 l
498.551 77.0826 l
497.707 74.3951 l
h
503.254 78.2701 m
503.254 77.8169 l
499.004 77.8169 l
499.004 78.2701 l
503.254 78.2701 l
h
503.254 80.0201 m
503.254 79.5669 l
499.004 79.5669 l
499.004 80.0201 l
503.254 80.0201 l
h
507.996 79.3638 m
509.933 79.3638 l
509.933 72.6919 l
507.824 73.1138 l
507.824 72.0357 l
509.918 71.6138 l
511.105 71.6138 l
511.105 79.3638 l
513.043 79.3638 l
513.043 80.3638 l
507.996 80.3638 l
507.996 79.3638 l
h
f
2 J
10.0000 M
3.00000 w
0 J
1.45000 M
newpath
495.000 78.2251 m
495.000 86.5094 488.284 93.2251 480.000 93.2251  c
471.716 93.2251 465.000 86.5094 465.000 78.2251  c
465.000 69.9409 471.716 63.2251 480.000 63.2251  c
488.284 63.2251 495.000 69.9409 495.000 78.2251  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
646.620 68.9732 m
680.769 94.4662 l
S
newpath
687.180 99.2519 m
680.555 88.0667 l
679.968 93.8680 l
674.573 96.0800 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
699.200 131.225 m
699.200 162.825 l
S
newpath
699.200 123.225 m
694.200 135.225 l
699.200 132.225 l
704.200 135.225 l
h
f
newpath
699.200 170.825 m
704.200 158.825 l
699.200 161.825 l
694.200 158.825 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
622.580 68.9732 m
588.431 94.4662 l
S
newpath
582.020 99.2520 m
594.627 96.0800 l
589.232 93.8680 l
588.645 88.0667 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
555.249 125.872 m
524.751 162.354 l
S
newpath
560.380 119.734 m
548.847 125.734 l
554.607 126.639 l
556.519 132.147 l
h
f
newpath
519.620 168.491 m
531.153 162.492 l
525.393 161.586 l
523.481 156.078 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
532.859 177.455 m
592.901 170.770 l
S
newpath
524.908 178.340 m
537.387 181.982 l
533.853 177.344 l
536.281 172.043 l
h
f
newpath
600.852 169.885 m
588.373 166.243 l
591.907 170.881 l
589.479 176.182 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
583.948 126.513 m
601.812 149.937 l
S
newpath
579.096 120.152 m
582.398 132.726 l
584.554 127.308 l
590.349 126.662 l
h
f
newpath
606.664 156.298 m
603.362 143.724 l
601.206 149.142 l
595.411 149.788 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
638.265 172.972 m
676.695 181.078 l
S
newpath
630.437 171.321 m
641.147 178.690 l
639.243 173.178 l
643.211 168.905 l
h
f
newpath
684.523 182.729 m
673.813 175.360 l
675.717 180.872 l
671.749 185.145 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
501.820 85.4984 m
548.180 100.952 l
S
newpath
494.230 82.9685 m
504.033 91.5067 l
502.768 85.8146 l
507.196 82.0199 l
h
f
newpath
555.770 103.482 m
545.967 94.9436 l
547.232 100.636 l
542.804 104.430 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
